// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        (unknown)
// source: minekube/gate/v1/gate_service.proto

package gatev1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	_ "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ProxyMode enumerates the current operating mode of Gate.
type ProxyMode int32

const (
	ProxyMode_PROXY_MODE_UNSPECIFIED ProxyMode = 0
	ProxyMode_PROXY_MODE_CLASSIC     ProxyMode = 1
	ProxyMode_PROXY_MODE_LITE        ProxyMode = 2
)

// Enum value maps for ProxyMode.
var (
	ProxyMode_name = map[int32]string{
		0: "PROXY_MODE_UNSPECIFIED",
		1: "PROXY_MODE_CLASSIC",
		2: "PROXY_MODE_LITE",
	}
	ProxyMode_value = map[string]int32{
		"PROXY_MODE_UNSPECIFIED": 0,
		"PROXY_MODE_CLASSIC":     1,
		"PROXY_MODE_LITE":        2,
	}
)

func (x ProxyMode) Enum() *ProxyMode {
	p := new(ProxyMode)
	*p = x
	return p
}

func (x ProxyMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProxyMode) Descriptor() protoreflect.EnumDescriptor {
	return file_minekube_gate_v1_gate_service_proto_enumTypes[0].Descriptor()
}

func (ProxyMode) Type() protoreflect.EnumType {
	return &file_minekube_gate_v1_gate_service_proto_enumTypes[0]
}

func (x ProxyMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProxyMode.Descriptor instead.
func (ProxyMode) EnumDescriptor() ([]byte, []int) {
	return file_minekube_gate_v1_gate_service_proto_rawDescGZIP(), []int{0}
}

// BedrockDeviceOS represents the operating system of a Bedrock Edition player's device.
type BedrockDeviceOS int32

const (
	BedrockDeviceOS_BEDROCK_DEVICE_OS_UNSPECIFIED   BedrockDeviceOS = 0
	BedrockDeviceOS_BEDROCK_DEVICE_OS_UNKNOWN       BedrockDeviceOS = 1
	BedrockDeviceOS_BEDROCK_DEVICE_OS_ANDROID       BedrockDeviceOS = 2
	BedrockDeviceOS_BEDROCK_DEVICE_OS_IOS           BedrockDeviceOS = 3
	BedrockDeviceOS_BEDROCK_DEVICE_OS_MACOS         BedrockDeviceOS = 4
	BedrockDeviceOS_BEDROCK_DEVICE_OS_AMAZON        BedrockDeviceOS = 5
	BedrockDeviceOS_BEDROCK_DEVICE_OS_GEAR_VR       BedrockDeviceOS = 6
	BedrockDeviceOS_BEDROCK_DEVICE_OS_HOLOLENS      BedrockDeviceOS = 7 // Deprecated
	BedrockDeviceOS_BEDROCK_DEVICE_OS_WINDOWS_UWP   BedrockDeviceOS = 8
	BedrockDeviceOS_BEDROCK_DEVICE_OS_WINDOWS_X86   BedrockDeviceOS = 9
	BedrockDeviceOS_BEDROCK_DEVICE_OS_DEDICATED     BedrockDeviceOS = 10
	BedrockDeviceOS_BEDROCK_DEVICE_OS_APPLE_TV      BedrockDeviceOS = 11 // Deprecated
	BedrockDeviceOS_BEDROCK_DEVICE_OS_PLAYSTATION   BedrockDeviceOS = 12
	BedrockDeviceOS_BEDROCK_DEVICE_OS_SWITCH        BedrockDeviceOS = 13
	BedrockDeviceOS_BEDROCK_DEVICE_OS_XBOX          BedrockDeviceOS = 14
	BedrockDeviceOS_BEDROCK_DEVICE_OS_WINDOWS_PHONE BedrockDeviceOS = 15 // Deprecated
	BedrockDeviceOS_BEDROCK_DEVICE_OS_LINUX         BedrockDeviceOS = 16
)

// Enum value maps for BedrockDeviceOS.
var (
	BedrockDeviceOS_name = map[int32]string{
		0:  "BEDROCK_DEVICE_OS_UNSPECIFIED",
		1:  "BEDROCK_DEVICE_OS_UNKNOWN",
		2:  "BEDROCK_DEVICE_OS_ANDROID",
		3:  "BEDROCK_DEVICE_OS_IOS",
		4:  "BEDROCK_DEVICE_OS_MACOS",
		5:  "BEDROCK_DEVICE_OS_AMAZON",
		6:  "BEDROCK_DEVICE_OS_GEAR_VR",
		7:  "BEDROCK_DEVICE_OS_HOLOLENS",
		8:  "BEDROCK_DEVICE_OS_WINDOWS_UWP",
		9:  "BEDROCK_DEVICE_OS_WINDOWS_X86",
		10: "BEDROCK_DEVICE_OS_DEDICATED",
		11: "BEDROCK_DEVICE_OS_APPLE_TV",
		12: "BEDROCK_DEVICE_OS_PLAYSTATION",
		13: "BEDROCK_DEVICE_OS_SWITCH",
		14: "BEDROCK_DEVICE_OS_XBOX",
		15: "BEDROCK_DEVICE_OS_WINDOWS_PHONE",
		16: "BEDROCK_DEVICE_OS_LINUX",
	}
	BedrockDeviceOS_value = map[string]int32{
		"BEDROCK_DEVICE_OS_UNSPECIFIED":   0,
		"BEDROCK_DEVICE_OS_UNKNOWN":       1,
		"BEDROCK_DEVICE_OS_ANDROID":       2,
		"BEDROCK_DEVICE_OS_IOS":           3,
		"BEDROCK_DEVICE_OS_MACOS":         4,
		"BEDROCK_DEVICE_OS_AMAZON":        5,
		"BEDROCK_DEVICE_OS_GEAR_VR":       6,
		"BEDROCK_DEVICE_OS_HOLOLENS":      7,
		"BEDROCK_DEVICE_OS_WINDOWS_UWP":   8,
		"BEDROCK_DEVICE_OS_WINDOWS_X86":   9,
		"BEDROCK_DEVICE_OS_DEDICATED":     10,
		"BEDROCK_DEVICE_OS_APPLE_TV":      11,
		"BEDROCK_DEVICE_OS_PLAYSTATION":   12,
		"BEDROCK_DEVICE_OS_SWITCH":        13,
		"BEDROCK_DEVICE_OS_XBOX":          14,
		"BEDROCK_DEVICE_OS_WINDOWS_PHONE": 15,
		"BEDROCK_DEVICE_OS_LINUX":         16,
	}
)

func (x BedrockDeviceOS) Enum() *BedrockDeviceOS {
	p := new(BedrockDeviceOS)
	*p = x
	return p
}

func (x BedrockDeviceOS) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BedrockDeviceOS) Descriptor() protoreflect.EnumDescriptor {
	return file_minekube_gate_v1_gate_service_proto_enumTypes[1].Descriptor()
}

func (BedrockDeviceOS) Type() protoreflect.EnumType {
	return &file_minekube_gate_v1_gate_service_proto_enumTypes[1]
}

func (x BedrockDeviceOS) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BedrockDeviceOS.Descriptor instead.
func (BedrockDeviceOS) EnumDescriptor() ([]byte, []int) {
	return file_minekube_gate_v1_gate_service_proto_rawDescGZIP(), []int{1}
}

// BedrockInputMode represents the input method used by a Bedrock Edition player.
type BedrockInputMode int32

const (
	BedrockInputMode_BEDROCK_INPUT_MODE_UNSPECIFIED       BedrockInputMode = 0
	BedrockInputMode_BEDROCK_INPUT_MODE_UNKNOWN           BedrockInputMode = 1
	BedrockInputMode_BEDROCK_INPUT_MODE_MOUSE             BedrockInputMode = 2
	BedrockInputMode_BEDROCK_INPUT_MODE_TOUCH             BedrockInputMode = 3
	BedrockInputMode_BEDROCK_INPUT_MODE_GAMEPAD           BedrockInputMode = 4
	BedrockInputMode_BEDROCK_INPUT_MODE_MOTION_CONTROLLER BedrockInputMode = 5
)

// Enum value maps for BedrockInputMode.
var (
	BedrockInputMode_name = map[int32]string{
		0: "BEDROCK_INPUT_MODE_UNSPECIFIED",
		1: "BEDROCK_INPUT_MODE_UNKNOWN",
		2: "BEDROCK_INPUT_MODE_MOUSE",
		3: "BEDROCK_INPUT_MODE_TOUCH",
		4: "BEDROCK_INPUT_MODE_GAMEPAD",
		5: "BEDROCK_INPUT_MODE_MOTION_CONTROLLER",
	}
	BedrockInputMode_value = map[string]int32{
		"BEDROCK_INPUT_MODE_UNSPECIFIED":       0,
		"BEDROCK_INPUT_MODE_UNKNOWN":           1,
		"BEDROCK_INPUT_MODE_MOUSE":             2,
		"BEDROCK_INPUT_MODE_TOUCH":             3,
		"BEDROCK_INPUT_MODE_GAMEPAD":           4,
		"BEDROCK_INPUT_MODE_MOTION_CONTROLLER": 5,
	}
)

func (x BedrockInputMode) Enum() *BedrockInputMode {
	p := new(BedrockInputMode)
	*p = x
	return p
}

func (x BedrockInputMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BedrockInputMode) Descriptor() protoreflect.EnumDescriptor {
	return file_minekube_gate_v1_gate_service_proto_enumTypes[2].Descriptor()
}

func (BedrockInputMode) Type() protoreflect.EnumType {
	return &file_minekube_gate_v1_gate_service_proto_enumTypes[2]
}

func (x BedrockInputMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BedrockInputMode.Descriptor instead.
func (BedrockInputMode) EnumDescriptor() ([]byte, []int) {
	return file_minekube_gate_v1_gate_service_proto_rawDescGZIP(), []int{2}
}

// BedrockUIProfile represents the UI profile used by a Bedrock Edition player.
type BedrockUIProfile int32

const (
	BedrockUIProfile_BEDROCK_UI_PROFILE_UNSPECIFIED BedrockUIProfile = 0
	BedrockUIProfile_BEDROCK_UI_PROFILE_CLASSIC     BedrockUIProfile = 1
	BedrockUIProfile_BEDROCK_UI_PROFILE_POCKET      BedrockUIProfile = 2
)

// Enum value maps for BedrockUIProfile.
var (
	BedrockUIProfile_name = map[int32]string{
		0: "BEDROCK_UI_PROFILE_UNSPECIFIED",
		1: "BEDROCK_UI_PROFILE_CLASSIC",
		2: "BEDROCK_UI_PROFILE_POCKET",
	}
	BedrockUIProfile_value = map[string]int32{
		"BEDROCK_UI_PROFILE_UNSPECIFIED": 0,
		"BEDROCK_UI_PROFILE_CLASSIC":     1,
		"BEDROCK_UI_PROFILE_POCKET":      2,
	}
)

func (x BedrockUIProfile) Enum() *BedrockUIProfile {
	p := new(BedrockUIProfile)
	*p = x
	return p
}

func (x BedrockUIProfile) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BedrockUIProfile) Descriptor() protoreflect.EnumDescriptor {
	return file_minekube_gate_v1_gate_service_proto_enumTypes[3].Descriptor()
}

func (BedrockUIProfile) Type() protoreflect.EnumType {
	return &file_minekube_gate_v1_gate_service_proto_enumTypes[3]
}

func (x BedrockUIProfile) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BedrockUIProfile.Descriptor instead.
func (BedrockUIProfile) EnumDescriptor() ([]byte, []int) {
	return file_minekube_gate_v1_gate_service_proto_rawDescGZIP(), []int{3}
}

// LiteRouteStrategy represents load balancing strategies for lite routes.
type LiteRouteStrategy int32

const (
	LiteRouteStrategy_LITE_ROUTE_STRATEGY_UNSPECIFIED       LiteRouteStrategy = 0
	LiteRouteStrategy_LITE_ROUTE_STRATEGY_SEQUENTIAL        LiteRouteStrategy = 1
	LiteRouteStrategy_LITE_ROUTE_STRATEGY_RANDOM            LiteRouteStrategy = 2
	LiteRouteStrategy_LITE_ROUTE_STRATEGY_ROUND_ROBIN       LiteRouteStrategy = 3
	LiteRouteStrategy_LITE_ROUTE_STRATEGY_LEAST_CONNECTIONS LiteRouteStrategy = 4
	LiteRouteStrategy_LITE_ROUTE_STRATEGY_LOWEST_LATENCY    LiteRouteStrategy = 5
)

// Enum value maps for LiteRouteStrategy.
var (
	LiteRouteStrategy_name = map[int32]string{
		0: "LITE_ROUTE_STRATEGY_UNSPECIFIED",
		1: "LITE_ROUTE_STRATEGY_SEQUENTIAL",
		2: "LITE_ROUTE_STRATEGY_RANDOM",
		3: "LITE_ROUTE_STRATEGY_ROUND_ROBIN",
		4: "LITE_ROUTE_STRATEGY_LEAST_CONNECTIONS",
		5: "LITE_ROUTE_STRATEGY_LOWEST_LATENCY",
	}
	LiteRouteStrategy_value = map[string]int32{
		"LITE_ROUTE_STRATEGY_UNSPECIFIED":       0,
		"LITE_ROUTE_STRATEGY_SEQUENTIAL":        1,
		"LITE_ROUTE_STRATEGY_RANDOM":            2,
		"LITE_ROUTE_STRATEGY_ROUND_ROBIN":       3,
		"LITE_ROUTE_STRATEGY_LEAST_CONNECTIONS": 4,
		"LITE_ROUTE_STRATEGY_LOWEST_LATENCY":    5,
	}
)

func (x LiteRouteStrategy) Enum() *LiteRouteStrategy {
	p := new(LiteRouteStrategy)
	*p = x
	return p
}

func (x LiteRouteStrategy) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LiteRouteStrategy) Descriptor() protoreflect.EnumDescriptor {
	return file_minekube_gate_v1_gate_service_proto_enumTypes[4].Descriptor()
}

func (LiteRouteStrategy) Type() protoreflect.EnumType {
	return &file_minekube_gate_v1_gate_service_proto_enumTypes[4]
}

func (x LiteRouteStrategy) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LiteRouteStrategy.Descriptor instead.
func (LiteRouteStrategy) EnumDescriptor() ([]byte, []int) {
	return file_minekube_gate_v1_gate_service_proto_rawDescGZIP(), []int{4}
}

// StoreCookieRequest is the request for StoreCookie method.
type StoreCookieRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The player's username or ID
	Player string `protobuf:"bytes,1,opt,name=player,proto3" json:"player,omitempty"`
	// The key of the cookie in format `namespace:key`
	Key string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	// The payload to store.
	// Passing an empty payload will remove the cookie.
	Payload       []byte `protobuf:"bytes,3,opt,name=payload,proto3" json:"payload,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StoreCookieRequest) Reset() {
	*x = StoreCookieRequest{}
	mi := &file_minekube_gate_v1_gate_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoreCookieRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreCookieRequest) ProtoMessage() {}

func (x *StoreCookieRequest) ProtoReflect() protoreflect.Message {
	mi := &file_minekube_gate_v1_gate_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreCookieRequest.ProtoReflect.Descriptor instead.
func (*StoreCookieRequest) Descriptor() ([]byte, []int) {
	return file_minekube_gate_v1_gate_service_proto_rawDescGZIP(), []int{0}
}

func (x *StoreCookieRequest) GetPlayer() string {
	if x != nil {
		return x.Player
	}
	return ""
}

func (x *StoreCookieRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *StoreCookieRequest) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

// StoreCookieResponse is the response for StoreCookie method.
type StoreCookieResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StoreCookieResponse) Reset() {
	*x = StoreCookieResponse{}
	mi := &file_minekube_gate_v1_gate_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoreCookieResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreCookieResponse) ProtoMessage() {}

func (x *StoreCookieResponse) ProtoReflect() protoreflect.Message {
	mi := &file_minekube_gate_v1_gate_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreCookieResponse.ProtoReflect.Descriptor instead.
func (*StoreCookieResponse) Descriptor() ([]byte, []int) {
	return file_minekube_gate_v1_gate_service_proto_rawDescGZIP(), []int{1}
}

// RequestCookieRequest is the request for RequestCookie method.
type RequestCookieRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The player's username or ID
	Player string `protobuf:"bytes,1,opt,name=player,proto3" json:"player,omitempty"`
	// The key of the cookie in format `namespace:key`
	Key           string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RequestCookieRequest) Reset() {
	*x = RequestCookieRequest{}
	mi := &file_minekube_gate_v1_gate_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RequestCookieRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestCookieRequest) ProtoMessage() {}

func (x *RequestCookieRequest) ProtoReflect() protoreflect.Message {
	mi := &file_minekube_gate_v1_gate_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestCookieRequest.ProtoReflect.Descriptor instead.
func (*RequestCookieRequest) Descriptor() ([]byte, []int) {
	return file_minekube_gate_v1_gate_service_proto_rawDescGZIP(), []int{2}
}

func (x *RequestCookieRequest) GetPlayer() string {
	if x != nil {
		return x.Player
	}
	return ""
}

func (x *RequestCookieRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

// RequestCookieResponse is the response for RequestCookie method.
type RequestCookieResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The payload of the cookie.
	// May be empty if the cookie is not found.
	Payload       []byte `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RequestCookieResponse) Reset() {
	*x = RequestCookieResponse{}
	mi := &file_minekube_gate_v1_gate_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RequestCookieResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestCookieResponse) ProtoMessage() {}

func (x *RequestCookieResponse) ProtoReflect() protoreflect.Message {
	mi := &file_minekube_gate_v1_gate_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestCookieResponse.ProtoReflect.Descriptor instead.
func (*RequestCookieResponse) Descriptor() ([]byte, []int) {
	return file_minekube_gate_v1_gate_service_proto_rawDescGZIP(), []int{3}
}

func (x *RequestCookieResponse) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

// DisconnectPlayerRequest is the request for DisconnectPlayer method.
type DisconnectPlayerRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The player's username or ID to disconnect
	Player string `protobuf:"bytes,1,opt,name=player,proto3" json:"player,omitempty"`
	// The reason displayed to the player when they are disconnected.
	//
	// Formats:
	//
	// - `{"text":"Hello, world!"}` - JSON text component. See https://wiki.vg/Text_formatting for details.
	//
	// - `§aHello,\n§bworld!` - Simple color codes. See https://wiki.vg/Text_formatting#Colors
	//
	// Optional, if empty no reason will be shown.
	Reason        string `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DisconnectPlayerRequest) Reset() {
	*x = DisconnectPlayerRequest{}
	mi := &file_minekube_gate_v1_gate_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DisconnectPlayerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisconnectPlayerRequest) ProtoMessage() {}

func (x *DisconnectPlayerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_minekube_gate_v1_gate_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisconnectPlayerRequest.ProtoReflect.Descriptor instead.
func (*DisconnectPlayerRequest) Descriptor() ([]byte, []int) {
	return file_minekube_gate_v1_gate_service_proto_rawDescGZIP(), []int{4}
}

func (x *DisconnectPlayerRequest) GetPlayer() string {
	if x != nil {
		return x.Player
	}
	return ""
}

func (x *DisconnectPlayerRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

// DisconnectPlayerResponse is the response for DisconnectPlayer method.
type DisconnectPlayerResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DisconnectPlayerResponse) Reset() {
	*x = DisconnectPlayerResponse{}
	mi := &file_minekube_gate_v1_gate_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DisconnectPlayerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisconnectPlayerResponse) ProtoMessage() {}

func (x *DisconnectPlayerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_minekube_gate_v1_gate_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisconnectPlayerResponse.ProtoReflect.Descriptor instead.
func (*DisconnectPlayerResponse) Descriptor() ([]byte, []int) {
	return file_minekube_gate_v1_gate_service_proto_rawDescGZIP(), []int{5}
}

// ConnectPlayerRequest is the request for ConnectPlayer method.
type ConnectPlayerRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The player's username or ID to connect
	Player string `protobuf:"bytes,1,opt,name=player,proto3" json:"player,omitempty"`
	// The target server name to connect the player to
	Server        string `protobuf:"bytes,2,opt,name=server,proto3" json:"server,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConnectPlayerRequest) Reset() {
	*x = ConnectPlayerRequest{}
	mi := &file_minekube_gate_v1_gate_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConnectPlayerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectPlayerRequest) ProtoMessage() {}

func (x *ConnectPlayerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_minekube_gate_v1_gate_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectPlayerRequest.ProtoReflect.Descriptor instead.
func (*ConnectPlayerRequest) Descriptor() ([]byte, []int) {
	return file_minekube_gate_v1_gate_service_proto_rawDescGZIP(), []int{6}
}

func (x *ConnectPlayerRequest) GetPlayer() string {
	if x != nil {
		return x.Player
	}
	return ""
}

func (x *ConnectPlayerRequest) GetServer() string {
	if x != nil {
		return x.Server
	}
	return ""
}

// ConnectPlayerResponse is the response for ConnectPlayer method.
type ConnectPlayerResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConnectPlayerResponse) Reset() {
	*x = ConnectPlayerResponse{}
	mi := &file_minekube_gate_v1_gate_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConnectPlayerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectPlayerResponse) ProtoMessage() {}

func (x *ConnectPlayerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_minekube_gate_v1_gate_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectPlayerResponse.ProtoReflect.Descriptor instead.
func (*ConnectPlayerResponse) Descriptor() ([]byte, []int) {
	return file_minekube_gate_v1_gate_service_proto_rawDescGZIP(), []int{7}
}

// RegisterServerRequest is the request for RegisterServer method.
type RegisterServerRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The unique name of the server
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The network address of the server (e.g. "localhost:25565")
	Address       string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterServerRequest) Reset() {
	*x = RegisterServerRequest{}
	mi := &file_minekube_gate_v1_gate_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterServerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterServerRequest) ProtoMessage() {}

func (x *RegisterServerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_minekube_gate_v1_gate_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterServerRequest.ProtoReflect.Descriptor instead.
func (*RegisterServerRequest) Descriptor() ([]byte, []int) {
	return file_minekube_gate_v1_gate_service_proto_rawDescGZIP(), []int{8}
}

func (x *RegisterServerRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RegisterServerRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

// RegisterServerResponse is the response for RegisterServer method.
type RegisterServerResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterServerResponse) Reset() {
	*x = RegisterServerResponse{}
	mi := &file_minekube_gate_v1_gate_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterServerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterServerResponse) ProtoMessage() {}

func (x *RegisterServerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_minekube_gate_v1_gate_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterServerResponse.ProtoReflect.Descriptor instead.
func (*RegisterServerResponse) Descriptor() ([]byte, []int) {
	return file_minekube_gate_v1_gate_service_proto_rawDescGZIP(), []int{9}
}

// UnregisterServerRequest is the request for UnregisterServer method.
type UnregisterServerRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name of the server.
	// Optional, if not set, the address will be used to match servers.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The address of the server.
	// Optional, if not set, the name will be used to match servers.
	// If both name and address are set, only the server that matches both properties exactly will be unregistered.
	// If only the address is set, the first server matching that address will be unregistered.
	Address       string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnregisterServerRequest) Reset() {
	*x = UnregisterServerRequest{}
	mi := &file_minekube_gate_v1_gate_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnregisterServerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnregisterServerRequest) ProtoMessage() {}

func (x *UnregisterServerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_minekube_gate_v1_gate_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnregisterServerRequest.ProtoReflect.Descriptor instead.
func (*UnregisterServerRequest) Descriptor() ([]byte, []int) {
	return file_minekube_gate_v1_gate_service_proto_rawDescGZIP(), []int{10}
}

func (x *UnregisterServerRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UnregisterServerRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

// UnregisterServerResponse is the response for UnregisterServer method.
type UnregisterServerResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnregisterServerResponse) Reset() {
	*x = UnregisterServerResponse{}
	mi := &file_minekube_gate_v1_gate_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnregisterServerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnregisterServerResponse) ProtoMessage() {}

func (x *UnregisterServerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_minekube_gate_v1_gate_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnregisterServerResponse.ProtoReflect.Descriptor instead.
func (*UnregisterServerResponse) Descriptor() ([]byte, []int) {
	return file_minekube_gate_v1_gate_service_proto_rawDescGZIP(), []int{11}
}

// ListServersRequest is the request for ListServers method.
type ListServersRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListServersRequest) Reset() {
	*x = ListServersRequest{}
	mi := &file_minekube_gate_v1_gate_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListServersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListServersRequest) ProtoMessage() {}

func (x *ListServersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_minekube_gate_v1_gate_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListServersRequest.ProtoReflect.Descriptor instead.
func (*ListServersRequest) Descriptor() ([]byte, []int) {
	return file_minekube_gate_v1_gate_service_proto_rawDescGZIP(), []int{12}
}

// ListServersResponse is the response for ListServers method.
type ListServersResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Servers       []*Server              `protobuf:"bytes,1,rep,name=servers,proto3" json:"servers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListServersResponse) Reset() {
	*x = ListServersResponse{}
	mi := &file_minekube_gate_v1_gate_service_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListServersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListServersResponse) ProtoMessage() {}

func (x *ListServersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_minekube_gate_v1_gate_service_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListServersResponse.ProtoReflect.Descriptor instead.
func (*ListServersResponse) Descriptor() ([]byte, []int) {
	return file_minekube_gate_v1_gate_service_proto_rawDescGZIP(), []int{13}
}

func (x *ListServersResponse) GetServers() []*Server {
	if x != nil {
		return x.Servers
	}
	return nil
}

// Server represents a backend server where Gate can connect players to.
type Server struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The unique name of the server.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The network address of the server.
	Address string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	// The number of players currently on the server.
	Players       int32 `protobuf:"varint,3,opt,name=players,proto3" json:"players,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Server) Reset() {
	*x = Server{}
	mi := &file_minekube_gate_v1_gate_service_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Server) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Server) ProtoMessage() {}

func (x *Server) ProtoReflect() protoreflect.Message {
	mi := &file_minekube_gate_v1_gate_service_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Server.ProtoReflect.Descriptor instead.
func (*Server) Descriptor() ([]byte, []int) {
	return file_minekube_gate_v1_gate_service_proto_rawDescGZIP(), []int{14}
}

func (x *Server) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Server) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Server) GetPlayers() int32 {
	if x != nil {
		return x.Players
	}
	return 0
}

// GetPlayerRequest is the request for GetPlayer method.
type GetPlayerRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Gets the player by their Minecraft UUID.
	// Optional, if not set the username will be used.
	// If both id and username are set, the id will be used.
	// Must be a valid Minecraft UUID format (e.g. "550e8400-e29b-41d4-a716-446655440000")
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Gets the player by their username.
	// Optional, if not set the id will be used.
	// Case-sensitive.
	Username      string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPlayerRequest) Reset() {
	*x = GetPlayerRequest{}
	mi := &file_minekube_gate_v1_gate_service_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPlayerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlayerRequest) ProtoMessage() {}

func (x *GetPlayerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_minekube_gate_v1_gate_service_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlayerRequest.ProtoReflect.Descriptor instead.
func (*GetPlayerRequest) Descriptor() ([]byte, []int) {
	return file_minekube_gate_v1_gate_service_proto_rawDescGZIP(), []int{15}
}

func (x *GetPlayerRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetPlayerRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

// GetPlayerResponse is the response for GetPlayer method.
type GetPlayerResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The player matching the request criteria
	Player        *Player `protobuf:"bytes,1,opt,name=player,proto3" json:"player,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPlayerResponse) Reset() {
	*x = GetPlayerResponse{}
	mi := &file_minekube_gate_v1_gate_service_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPlayerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlayerResponse) ProtoMessage() {}

func (x *GetPlayerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_minekube_gate_v1_gate_service_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlayerResponse.ProtoReflect.Descriptor instead.
func (*GetPlayerResponse) Descriptor() ([]byte, []int) {
	return file_minekube_gate_v1_gate_service_proto_rawDescGZIP(), []int{16}
}

func (x *GetPlayerResponse) GetPlayer() *Player {
	if x != nil {
		return x.Player
	}
	return nil
}

// ListPlayersRequest is the request for ListPlayers method.
type ListPlayersRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Filter players by server names.
	// Optional, if empty all online players are returned.
	// If specified, only returns players on the listed servers.
	Servers       []string `protobuf:"bytes,1,rep,name=servers,proto3" json:"servers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPlayersRequest) Reset() {
	*x = ListPlayersRequest{}
	mi := &file_minekube_gate_v1_gate_service_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPlayersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPlayersRequest) ProtoMessage() {}

func (x *ListPlayersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_minekube_gate_v1_gate_service_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPlayersRequest.ProtoReflect.Descriptor instead.
func (*ListPlayersRequest) Descriptor() ([]byte, []int) {
	return file_minekube_gate_v1_gate_service_proto_rawDescGZIP(), []int{17}
}

func (x *ListPlayersRequest) GetServers() []string {
	if x != nil {
		return x.Servers
	}
	return nil
}

// ListPlayersResponse is the response for ListPlayers method.
type ListPlayersResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Players       []*Player              `protobuf:"bytes,1,rep,name=players,proto3" json:"players,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPlayersResponse) Reset() {
	*x = ListPlayersResponse{}
	mi := &file_minekube_gate_v1_gate_service_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPlayersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPlayersResponse) ProtoMessage() {}

func (x *ListPlayersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_minekube_gate_v1_gate_service_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPlayersResponse.ProtoReflect.Descriptor instead.
func (*ListPlayersResponse) Descriptor() ([]byte, []int) {
	return file_minekube_gate_v1_gate_service_proto_rawDescGZIP(), []int{18}
}

func (x *ListPlayersResponse) GetPlayers() []*Player {
	if x != nil {
		return x.Players
	}
	return nil
}

// Player represents an online player on the proxy.
type Player struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The player's Minecraft UUID
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The player's username
	Username string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	// Optional Bedrock player data (only present for Bedrock players)
	Bedrock       *BedrockPlayerData `protobuf:"bytes,3,opt,name=bedrock,proto3" json:"bedrock,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Player) Reset() {
	*x = Player{}
	mi := &file_minekube_gate_v1_gate_service_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Player) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Player) ProtoMessage() {}

func (x *Player) ProtoReflect() protoreflect.Message {
	mi := &file_minekube_gate_v1_gate_service_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Player.ProtoReflect.Descriptor instead.
func (*Player) Descriptor() ([]byte, []int) {
	return file_minekube_gate_v1_gate_service_proto_rawDescGZIP(), []int{19}
}

func (x *Player) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Player) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *Player) GetBedrock() *BedrockPlayerData {
	if x != nil {
		return x.Bedrock
	}
	return nil
}

// BedrockPlayerData contains information specific to Bedrock Edition players.
// This data is only available for players connecting through Geyser/Floodgate.
type BedrockPlayerData struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Xbox User ID (XUID) - unique identifier for Bedrock players
	Xuid int64 `protobuf:"varint,1,opt,name=xuid,proto3" json:"xuid,omitempty"`
	// Device operating system the player is using
	DeviceOs BedrockDeviceOS `protobuf:"varint,2,opt,name=device_os,json=deviceOs,proto3,enum=minekube.gate.v1.BedrockDeviceOS" json:"device_os,omitempty"`
	// Client language code (e.g., "en_US")
	Language string `protobuf:"bytes,3,opt,name=language,proto3" json:"language,omitempty"`
	// UI profile (Classic or Pocket)
	UiProfile BedrockUIProfile `protobuf:"varint,4,opt,name=ui_profile,json=uiProfile,proto3,enum=minekube.gate.v1.BedrockUIProfile" json:"ui_profile,omitempty"`
	// Input method (mouse, touch, gamepad, etc.)
	InputMode BedrockInputMode `protobuf:"varint,5,opt,name=input_mode,json=inputMode,proto3,enum=minekube.gate.v1.BedrockInputMode" json:"input_mode,omitempty"`
	// Whether the player is connecting through a proxy
	BehindProxy bool `protobuf:"varint,6,opt,name=behind_proxy,json=behindProxy,proto3" json:"behind_proxy,omitempty"`
	// Linked Java Edition username (if any)
	LinkedPlayer  string `protobuf:"bytes,7,opt,name=linked_player,json=linkedPlayer,proto3" json:"linked_player,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BedrockPlayerData) Reset() {
	*x = BedrockPlayerData{}
	mi := &file_minekube_gate_v1_gate_service_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BedrockPlayerData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BedrockPlayerData) ProtoMessage() {}

func (x *BedrockPlayerData) ProtoReflect() protoreflect.Message {
	mi := &file_minekube_gate_v1_gate_service_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BedrockPlayerData.ProtoReflect.Descriptor instead.
func (*BedrockPlayerData) Descriptor() ([]byte, []int) {
	return file_minekube_gate_v1_gate_service_proto_rawDescGZIP(), []int{20}
}

func (x *BedrockPlayerData) GetXuid() int64 {
	if x != nil {
		return x.Xuid
	}
	return 0
}

func (x *BedrockPlayerData) GetDeviceOs() BedrockDeviceOS {
	if x != nil {
		return x.DeviceOs
	}
	return BedrockDeviceOS_BEDROCK_DEVICE_OS_UNSPECIFIED
}

func (x *BedrockPlayerData) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *BedrockPlayerData) GetUiProfile() BedrockUIProfile {
	if x != nil {
		return x.UiProfile
	}
	return BedrockUIProfile_BEDROCK_UI_PROFILE_UNSPECIFIED
}

func (x *BedrockPlayerData) GetInputMode() BedrockInputMode {
	if x != nil {
		return x.InputMode
	}
	return BedrockInputMode_BEDROCK_INPUT_MODE_UNSPECIFIED
}

func (x *BedrockPlayerData) GetBehindProxy() bool {
	if x != nil {
		return x.BehindProxy
	}
	return false
}

func (x *BedrockPlayerData) GetLinkedPlayer() string {
	if x != nil {
		return x.LinkedPlayer
	}
	return ""
}

// GetStatusRequest is the request for GetStatus method.
type GetStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetStatusRequest) Reset() {
	*x = GetStatusRequest{}
	mi := &file_minekube_gate_v1_gate_service_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStatusRequest) ProtoMessage() {}

func (x *GetStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_minekube_gate_v1_gate_service_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStatusRequest.ProtoReflect.Descriptor instead.
func (*GetStatusRequest) Descriptor() ([]byte, []int) {
	return file_minekube_gate_v1_gate_service_proto_rawDescGZIP(), []int{21}
}

// GetStatusResponse contains proxy runtime metadata.
type GetStatusResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Gate version string
	Version string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	// Current operating mode (classic or lite)
	Mode ProxyMode `protobuf:"varint,2,opt,name=mode,proto3,enum=minekube.gate.v1.ProxyMode" json:"mode,omitempty"`
	// Mode-specific statistics
	//
	// Types that are valid to be assigned to Stats:
	//
	//	*GetStatusResponse_Classic
	//	*GetStatusResponse_Lite
	Stats         isGetStatusResponse_Stats `protobuf_oneof:"stats"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetStatusResponse) Reset() {
	*x = GetStatusResponse{}
	mi := &file_minekube_gate_v1_gate_service_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStatusResponse) ProtoMessage() {}

func (x *GetStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_minekube_gate_v1_gate_service_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStatusResponse.ProtoReflect.Descriptor instead.
func (*GetStatusResponse) Descriptor() ([]byte, []int) {
	return file_minekube_gate_v1_gate_service_proto_rawDescGZIP(), []int{22}
}

func (x *GetStatusResponse) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *GetStatusResponse) GetMode() ProxyMode {
	if x != nil {
		return x.Mode
	}
	return ProxyMode_PROXY_MODE_UNSPECIFIED
}

func (x *GetStatusResponse) GetStats() isGetStatusResponse_Stats {
	if x != nil {
		return x.Stats
	}
	return nil
}

func (x *GetStatusResponse) GetClassic() *ClassicStats {
	if x != nil {
		if x, ok := x.Stats.(*GetStatusResponse_Classic); ok {
			return x.Classic
		}
	}
	return nil
}

func (x *GetStatusResponse) GetLite() *LiteStats {
	if x != nil {
		if x, ok := x.Stats.(*GetStatusResponse_Lite); ok {
			return x.Lite
		}
	}
	return nil
}

type isGetStatusResponse_Stats interface {
	isGetStatusResponse_Stats()
}

type GetStatusResponse_Classic struct {
	// Statistics for classic mode
	Classic *ClassicStats `protobuf:"bytes,3,opt,name=classic,proto3,oneof"`
}

type GetStatusResponse_Lite struct {
	// Statistics for lite mode
	Lite *LiteStats `protobuf:"bytes,4,opt,name=lite,proto3,oneof"`
}

func (*GetStatusResponse_Classic) isGetStatusResponse_Stats() {}

func (*GetStatusResponse_Lite) isGetStatusResponse_Stats() {}

// ClassicStats contains statistics for classic proxy mode.
type ClassicStats struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Number of online players
	Players int32 `protobuf:"varint,1,opt,name=players,proto3" json:"players,omitempty"`
	// Number of registered servers
	Servers       int32 `protobuf:"varint,2,opt,name=servers,proto3" json:"servers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClassicStats) Reset() {
	*x = ClassicStats{}
	mi := &file_minekube_gate_v1_gate_service_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClassicStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClassicStats) ProtoMessage() {}

func (x *ClassicStats) ProtoReflect() protoreflect.Message {
	mi := &file_minekube_gate_v1_gate_service_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClassicStats.ProtoReflect.Descriptor instead.
func (*ClassicStats) Descriptor() ([]byte, []int) {
	return file_minekube_gate_v1_gate_service_proto_rawDescGZIP(), []int{23}
}

func (x *ClassicStats) GetPlayers() int32 {
	if x != nil {
		return x.Players
	}
	return 0
}

func (x *ClassicStats) GetServers() int32 {
	if x != nil {
		return x.Servers
	}
	return 0
}

// LiteStats contains statistics for lite proxy mode.
type LiteStats struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Number of active connections being proxied
	Connections int32 `protobuf:"varint,1,opt,name=connections,proto3" json:"connections,omitempty"`
	// Number of configured routes
	Routes        int32 `protobuf:"varint,2,opt,name=routes,proto3" json:"routes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LiteStats) Reset() {
	*x = LiteStats{}
	mi := &file_minekube_gate_v1_gate_service_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LiteStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LiteStats) ProtoMessage() {}

func (x *LiteStats) ProtoReflect() protoreflect.Message {
	mi := &file_minekube_gate_v1_gate_service_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LiteStats.ProtoReflect.Descriptor instead.
func (*LiteStats) Descriptor() ([]byte, []int) {
	return file_minekube_gate_v1_gate_service_proto_rawDescGZIP(), []int{24}
}

func (x *LiteStats) GetConnections() int32 {
	if x != nil {
		return x.Connections
	}
	return 0
}

func (x *LiteStats) GetRoutes() int32 {
	if x != nil {
		return x.Routes
	}
	return 0
}

// GateConfig represents the root configuration structure
type GateConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Api           *APIConfig             `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	Connect       *ConnectConfig         `protobuf:"bytes,2,opt,name=connect,proto3" json:"connect,omitempty"`
	Config        *JavaConfig            `protobuf:"bytes,3,opt,name=config,proto3" json:"config,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GateConfig) Reset() {
	*x = GateConfig{}
	mi := &file_minekube_gate_v1_gate_service_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GateConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GateConfig) ProtoMessage() {}

func (x *GateConfig) ProtoReflect() protoreflect.Message {
	mi := &file_minekube_gate_v1_gate_service_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GateConfig.ProtoReflect.Descriptor instead.
func (*GateConfig) Descriptor() ([]byte, []int) {
	return file_minekube_gate_v1_gate_service_proto_rawDescGZIP(), []int{25}
}

func (x *GateConfig) GetApi() *APIConfig {
	if x != nil {
		return x.Api
	}
	return nil
}

func (x *GateConfig) GetConnect() *ConnectConfig {
	if x != nil {
		return x.Connect
	}
	return nil
}

func (x *GateConfig) GetConfig() *JavaConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

// APIConfig represents the Gate API configuration
type APIConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Whether the API is enabled
	Enabled bool `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	// The address to bind the API server to (using a localhost address is recommended)
	Bind          string `protobuf:"bytes,2,opt,name=bind,proto3" json:"bind,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *APIConfig) Reset() {
	*x = APIConfig{}
	mi := &file_minekube_gate_v1_gate_service_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *APIConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APIConfig) ProtoMessage() {}

func (x *APIConfig) ProtoReflect() protoreflect.Message {
	mi := &file_minekube_gate_v1_gate_service_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APIConfig.ProtoReflect.Descriptor instead.
func (*APIConfig) Descriptor() ([]byte, []int) {
	return file_minekube_gate_v1_gate_service_proto_rawDescGZIP(), []int{26}
}

func (x *APIConfig) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *APIConfig) GetBind() string {
	if x != nil {
		return x.Bind
	}
	return ""
}

// ConnectConfig represents the Connect network configuration
type ConnectConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Whether to connect Gate to the WatchService
	Enabled bool `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	// Endpoint name
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Allow offline mode players to join
	AllowOfflineModePlayers bool `protobuf:"varint,3,opt,name=allow_offline_mode_players,json=allowOfflineModePlayers,proto3" json:"allow_offline_mode_players,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *ConnectConfig) Reset() {
	*x = ConnectConfig{}
	mi := &file_minekube_gate_v1_gate_service_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConnectConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectConfig) ProtoMessage() {}

func (x *ConnectConfig) ProtoReflect() protoreflect.Message {
	mi := &file_minekube_gate_v1_gate_service_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectConfig.ProtoReflect.Descriptor instead.
func (*ConnectConfig) Descriptor() ([]byte, []int) {
	return file_minekube_gate_v1_gate_service_proto_rawDescGZIP(), []int{27}
}

func (x *ConnectConfig) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *ConnectConfig) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ConnectConfig) GetAllowOfflineModePlayers() bool {
	if x != nil {
		return x.AllowOfflineModePlayers
	}
	return false
}

// JavaConfig represents the main Java edition configuration
type JavaConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The address to listen for connections
	Bind string `protobuf:"bytes,1,opt,name=bind,proto3" json:"bind,omitempty"`
	// Whether to enable online mode
	OnlineMode bool `protobuf:"varint,2,opt,name=online_mode,json=onlineMode,proto3" json:"online_mode,omitempty"`
	// Player info forwarding settings
	Forwarding *ForwardingConfig `protobuf:"bytes,3,opt,name=forwarding,proto3" json:"forwarding,omitempty"`
	// Status response settings
	Status *StatusConfig `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	// Registered servers (name:address)
	Servers map[string]string `protobuf:"bytes,5,rep,name=servers,proto3" json:"servers,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Try server names order
	Try []string `protobuf:"bytes,6,rep,name=try,proto3" json:"try,omitempty"`
	// Note: forced_hosts is represented as JSON string due to protobuf limitations with map<string, []string>
	ForcedHostsJson string `protobuf:"bytes,7,opt,name=forced_hosts_json,json=forcedHostsJson,proto3" json:"forced_hosts_json,omitempty"`
	// Whether to accept transfers from other hosts via transfer packet
	AcceptTransfers bool `protobuf:"varint,8,opt,name=accept_transfers,json=acceptTransfers,proto3" json:"accept_transfers,omitempty"`
	// Whether to enable BungeeCord plugin messaging
	BungeePluginChannelEnabled bool `protobuf:"varint,9,opt,name=bungee_plugin_channel_enabled,json=bungeePluginChannelEnabled,proto3" json:"bungee_plugin_channel_enabled,omitempty"`
	// Lite mode settings
	Lite          *LiteConfig `protobuf:"bytes,10,opt,name=lite,proto3" json:"lite,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JavaConfig) Reset() {
	*x = JavaConfig{}
	mi := &file_minekube_gate_v1_gate_service_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JavaConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JavaConfig) ProtoMessage() {}

func (x *JavaConfig) ProtoReflect() protoreflect.Message {
	mi := &file_minekube_gate_v1_gate_service_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JavaConfig.ProtoReflect.Descriptor instead.
func (*JavaConfig) Descriptor() ([]byte, []int) {
	return file_minekube_gate_v1_gate_service_proto_rawDescGZIP(), []int{28}
}

func (x *JavaConfig) GetBind() string {
	if x != nil {
		return x.Bind
	}
	return ""
}

func (x *JavaConfig) GetOnlineMode() bool {
	if x != nil {
		return x.OnlineMode
	}
	return false
}

func (x *JavaConfig) GetForwarding() *ForwardingConfig {
	if x != nil {
		return x.Forwarding
	}
	return nil
}

func (x *JavaConfig) GetStatus() *StatusConfig {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *JavaConfig) GetServers() map[string]string {
	if x != nil {
		return x.Servers
	}
	return nil
}

func (x *JavaConfig) GetTry() []string {
	if x != nil {
		return x.Try
	}
	return nil
}

func (x *JavaConfig) GetForcedHostsJson() string {
	if x != nil {
		return x.ForcedHostsJson
	}
	return ""
}

func (x *JavaConfig) GetAcceptTransfers() bool {
	if x != nil {
		return x.AcceptTransfers
	}
	return false
}

func (x *JavaConfig) GetBungeePluginChannelEnabled() bool {
	if x != nil {
		return x.BungeePluginChannelEnabled
	}
	return false
}

func (x *JavaConfig) GetLite() *LiteConfig {
	if x != nil {
		return x.Lite
	}
	return nil
}

// ForwardingConfig represents player info forwarding settings
type ForwardingConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Forwarding mode ("none", "legacy", "velocity", "bungeeguard")
	Mode string `protobuf:"bytes,1,opt,name=mode,proto3" json:"mode,omitempty"`
	// Secret used with "velocity" mode
	VelocitySecret string `protobuf:"bytes,2,opt,name=velocity_secret,json=velocitySecret,proto3" json:"velocity_secret,omitempty"`
	// Secret used with "bungeeguard" mode
	BungeeGuardSecret string `protobuf:"bytes,3,opt,name=bungee_guard_secret,json=bungeeGuardSecret,proto3" json:"bungee_guard_secret,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ForwardingConfig) Reset() {
	*x = ForwardingConfig{}
	mi := &file_minekube_gate_v1_gate_service_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ForwardingConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForwardingConfig) ProtoMessage() {}

func (x *ForwardingConfig) ProtoReflect() protoreflect.Message {
	mi := &file_minekube_gate_v1_gate_service_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForwardingConfig.ProtoReflect.Descriptor instead.
func (*ForwardingConfig) Descriptor() ([]byte, []int) {
	return file_minekube_gate_v1_gate_service_proto_rawDescGZIP(), []int{29}
}

func (x *ForwardingConfig) GetMode() string {
	if x != nil {
		return x.Mode
	}
	return ""
}

func (x *ForwardingConfig) GetVelocitySecret() string {
	if x != nil {
		return x.VelocitySecret
	}
	return ""
}

func (x *ForwardingConfig) GetBungeeGuardSecret() string {
	if x != nil {
		return x.BungeeGuardSecret
	}
	return ""
}

// StatusConfig represents status response settings
type StatusConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Message of the Day displayed in server list
	Motd string `protobuf:"bytes,1,opt,name=motd,proto3" json:"motd,omitempty"`
	// Maximum players shown in server list
	ShowMaxPlayers int32 `protobuf:"varint,2,opt,name=show_max_players,json=showMaxPlayers,proto3" json:"show_max_players,omitempty"`
	// Base64-encoded favicon image
	Favicon string `protobuf:"bytes,3,opt,name=favicon,proto3" json:"favicon,omitempty"`
	// Whether to log ping requests
	LogPingRequests bool `protobuf:"varint,4,opt,name=log_ping_requests,json=logPingRequests,proto3" json:"log_ping_requests,omitempty"`
	// Whether the proxy should present itself as Forge/FML-compatible
	AnnounceForge bool `protobuf:"varint,5,opt,name=announce_forge,json=announceForge,proto3" json:"announce_forge,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StatusConfig) Reset() {
	*x = StatusConfig{}
	mi := &file_minekube_gate_v1_gate_service_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatusConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusConfig) ProtoMessage() {}

func (x *StatusConfig) ProtoReflect() protoreflect.Message {
	mi := &file_minekube_gate_v1_gate_service_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusConfig.ProtoReflect.Descriptor instead.
func (*StatusConfig) Descriptor() ([]byte, []int) {
	return file_minekube_gate_v1_gate_service_proto_rawDescGZIP(), []int{30}
}

func (x *StatusConfig) GetMotd() string {
	if x != nil {
		return x.Motd
	}
	return ""
}

func (x *StatusConfig) GetShowMaxPlayers() int32 {
	if x != nil {
		return x.ShowMaxPlayers
	}
	return 0
}

func (x *StatusConfig) GetFavicon() string {
	if x != nil {
		return x.Favicon
	}
	return ""
}

func (x *StatusConfig) GetLogPingRequests() bool {
	if x != nil {
		return x.LogPingRequests
	}
	return false
}

func (x *StatusConfig) GetAnnounceForge() bool {
	if x != nil {
		return x.AnnounceForge
	}
	return false
}

// LiteConfig represents Gate Lite mode configuration
type LiteConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Whether Lite mode is enabled
	Enabled bool `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	// Configured lite routes
	Routes        []*LiteRoute `protobuf:"bytes,2,rep,name=routes,proto3" json:"routes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LiteConfig) Reset() {
	*x = LiteConfig{}
	mi := &file_minekube_gate_v1_gate_service_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LiteConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LiteConfig) ProtoMessage() {}

func (x *LiteConfig) ProtoReflect() protoreflect.Message {
	mi := &file_minekube_gate_v1_gate_service_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LiteConfig.ProtoReflect.Descriptor instead.
func (*LiteConfig) Descriptor() ([]byte, []int) {
	return file_minekube_gate_v1_gate_service_proto_rawDescGZIP(), []int{31}
}

func (x *LiteConfig) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *LiteConfig) GetRoutes() []*LiteRoute {
	if x != nil {
		return x.Routes
	}
	return nil
}

// GetConfigRequest is the request for GetConfig method.
type GetConfigRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetConfigRequest) Reset() {
	*x = GetConfigRequest{}
	mi := &file_minekube_gate_v1_gate_service_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConfigRequest) ProtoMessage() {}

func (x *GetConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_minekube_gate_v1_gate_service_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConfigRequest.ProtoReflect.Descriptor instead.
func (*GetConfigRequest) Descriptor() ([]byte, []int) {
	return file_minekube_gate_v1_gate_service_proto_rawDescGZIP(), []int{32}
}

// GetConfigResponse contains the serialized config payload.
type GetConfigResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// YAML-serialized configuration data
	Payload       string `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetConfigResponse) Reset() {
	*x = GetConfigResponse{}
	mi := &file_minekube_gate_v1_gate_service_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConfigResponse) ProtoMessage() {}

func (x *GetConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_minekube_gate_v1_gate_service_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConfigResponse.ProtoReflect.Descriptor instead.
func (*GetConfigResponse) Descriptor() ([]byte, []int) {
	return file_minekube_gate_v1_gate_service_proto_rawDescGZIP(), []int{33}
}

func (x *GetConfigResponse) GetPayload() string {
	if x != nil {
		return x.Payload
	}
	return ""
}

// ValidateConfigRequest is the request for ValidateConfig method.
// The config payload is parsed with a YAML decoder (which supports JSON as YAML is a superset).
type ValidateConfigRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Configuration data as YAML or JSON string
	Config        string `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValidateConfigRequest) Reset() {
	*x = ValidateConfigRequest{}
	mi := &file_minekube_gate_v1_gate_service_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidateConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateConfigRequest) ProtoMessage() {}

func (x *ValidateConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_minekube_gate_v1_gate_service_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateConfigRequest.ProtoReflect.Descriptor instead.
func (*ValidateConfigRequest) Descriptor() ([]byte, []int) {
	return file_minekube_gate_v1_gate_service_proto_rawDescGZIP(), []int{34}
}

func (x *ValidateConfigRequest) GetConfig() string {
	if x != nil {
		return x.Config
	}
	return ""
}

// ValidateConfigResponse contains validation results when the config is processed.
type ValidateConfigResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Warnings      []string               `protobuf:"bytes,1,rep,name=warnings,proto3" json:"warnings,omitempty"`
	Errors        []string               `protobuf:"bytes,2,rep,name=errors,proto3" json:"errors,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValidateConfigResponse) Reset() {
	*x = ValidateConfigResponse{}
	mi := &file_minekube_gate_v1_gate_service_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidateConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateConfigResponse) ProtoMessage() {}

func (x *ValidateConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_minekube_gate_v1_gate_service_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateConfigResponse.ProtoReflect.Descriptor instead.
func (*ValidateConfigResponse) Descriptor() ([]byte, []int) {
	return file_minekube_gate_v1_gate_service_proto_rawDescGZIP(), []int{35}
}

func (x *ValidateConfigResponse) GetWarnings() []string {
	if x != nil {
		return x.Warnings
	}
	return nil
}

func (x *ValidateConfigResponse) GetErrors() []string {
	if x != nil {
		return x.Errors
	}
	return nil
}

// ApplyConfigRequest is the request for ApplyConfig method.
// The config payload is parsed with a YAML decoder (which supports JSON as YAML is a superset).
type ApplyConfigRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Configuration data as YAML or JSON string
	Config string `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
	// Whether to persist the config to disk by overwriting the existing config file.
	// Only works if a config file exists. Defaults to false (in-memory only).
	Persist       bool `protobuf:"varint,2,opt,name=persist,proto3" json:"persist,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApplyConfigRequest) Reset() {
	*x = ApplyConfigRequest{}
	mi := &file_minekube_gate_v1_gate_service_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApplyConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplyConfigRequest) ProtoMessage() {}

func (x *ApplyConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_minekube_gate_v1_gate_service_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplyConfigRequest.ProtoReflect.Descriptor instead.
func (*ApplyConfigRequest) Descriptor() ([]byte, []int) {
	return file_minekube_gate_v1_gate_service_proto_rawDescGZIP(), []int{36}
}

func (x *ApplyConfigRequest) GetConfig() string {
	if x != nil {
		return x.Config
	}
	return ""
}

func (x *ApplyConfigRequest) GetPersist() bool {
	if x != nil {
		return x.Persist
	}
	return false
}

// ApplyConfigResponse contains validation warnings emitted while applying the config.
type ApplyConfigResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Warnings      []string               `protobuf:"bytes,1,rep,name=warnings,proto3" json:"warnings,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApplyConfigResponse) Reset() {
	*x = ApplyConfigResponse{}
	mi := &file_minekube_gate_v1_gate_service_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApplyConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplyConfigResponse) ProtoMessage() {}

func (x *ApplyConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_minekube_gate_v1_gate_service_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplyConfigResponse.ProtoReflect.Descriptor instead.
func (*ApplyConfigResponse) Descriptor() ([]byte, []int) {
	return file_minekube_gate_v1_gate_service_proto_rawDescGZIP(), []int{37}
}

func (x *ApplyConfigResponse) GetWarnings() []string {
	if x != nil {
		return x.Warnings
	}
	return nil
}

// ListLiteRoutesRequest is the request for ListLiteRoutes method.
type ListLiteRoutesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListLiteRoutesRequest) Reset() {
	*x = ListLiteRoutesRequest{}
	mi := &file_minekube_gate_v1_gate_service_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListLiteRoutesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLiteRoutesRequest) ProtoMessage() {}

func (x *ListLiteRoutesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_minekube_gate_v1_gate_service_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLiteRoutesRequest.ProtoReflect.Descriptor instead.
func (*ListLiteRoutesRequest) Descriptor() ([]byte, []int) {
	return file_minekube_gate_v1_gate_service_proto_rawDescGZIP(), []int{38}
}

// ListLiteRoutesResponse is the response for ListLiteRoutes method.
type ListLiteRoutesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Routes        []*LiteRoute           `protobuf:"bytes,1,rep,name=routes,proto3" json:"routes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListLiteRoutesResponse) Reset() {
	*x = ListLiteRoutesResponse{}
	mi := &file_minekube_gate_v1_gate_service_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListLiteRoutesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLiteRoutesResponse) ProtoMessage() {}

func (x *ListLiteRoutesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_minekube_gate_v1_gate_service_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLiteRoutesResponse.ProtoReflect.Descriptor instead.
func (*ListLiteRoutesResponse) Descriptor() ([]byte, []int) {
	return file_minekube_gate_v1_gate_service_proto_rawDescGZIP(), []int{39}
}

func (x *ListLiteRoutesResponse) GetRoutes() []*LiteRoute {
	if x != nil {
		return x.Routes
	}
	return nil
}

// GetLiteRouteRequest is the request for GetLiteRoute method.
type GetLiteRouteRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Host matcher to look up (case-insensitive).
	Host          string `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLiteRouteRequest) Reset() {
	*x = GetLiteRouteRequest{}
	mi := &file_minekube_gate_v1_gate_service_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLiteRouteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLiteRouteRequest) ProtoMessage() {}

func (x *GetLiteRouteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_minekube_gate_v1_gate_service_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLiteRouteRequest.ProtoReflect.Descriptor instead.
func (*GetLiteRouteRequest) Descriptor() ([]byte, []int) {
	return file_minekube_gate_v1_gate_service_proto_rawDescGZIP(), []int{40}
}

func (x *GetLiteRouteRequest) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

// GetLiteRouteResponse is the response for GetLiteRoute method.
type GetLiteRouteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Route         *LiteRoute             `protobuf:"bytes,1,opt,name=route,proto3" json:"route,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLiteRouteResponse) Reset() {
	*x = GetLiteRouteResponse{}
	mi := &file_minekube_gate_v1_gate_service_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLiteRouteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLiteRouteResponse) ProtoMessage() {}

func (x *GetLiteRouteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_minekube_gate_v1_gate_service_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLiteRouteResponse.ProtoReflect.Descriptor instead.
func (*GetLiteRouteResponse) Descriptor() ([]byte, []int) {
	return file_minekube_gate_v1_gate_service_proto_rawDescGZIP(), []int{41}
}

func (x *GetLiteRouteResponse) GetRoute() *LiteRoute {
	if x != nil {
		return x.Route
	}
	return nil
}

// LiteRouteBackend represents a backend target for a lite route.
type LiteRouteBackend struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Network address of the backend server
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	// Number of active connections to this backend
	ActiveConnections uint32 `protobuf:"varint,2,opt,name=active_connections,json=activeConnections,proto3" json:"active_connections,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *LiteRouteBackend) Reset() {
	*x = LiteRouteBackend{}
	mi := &file_minekube_gate_v1_gate_service_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LiteRouteBackend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LiteRouteBackend) ProtoMessage() {}

func (x *LiteRouteBackend) ProtoReflect() protoreflect.Message {
	mi := &file_minekube_gate_v1_gate_service_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LiteRouteBackend.ProtoReflect.Descriptor instead.
func (*LiteRouteBackend) Descriptor() ([]byte, []int) {
	return file_minekube_gate_v1_gate_service_proto_rawDescGZIP(), []int{42}
}

func (x *LiteRouteBackend) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *LiteRouteBackend) GetActiveConnections() uint32 {
	if x != nil {
		return x.ActiveConnections
	}
	return 0
}

// LiteRouteOptions captures proxy behaviour flags for a lite route.
type LiteRouteOptions struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Whether to enable HA-Proxy protocol for this route
	ProxyProtocol bool `protobuf:"varint,1,opt,name=proxy_protocol,json=proxyProtocol,proto3" json:"proxy_protocol,omitempty"`
	// Whether to enable TCPShield real IP support
	TcpShieldRealIp bool `protobuf:"varint,2,opt,name=tcp_shield_real_ip,json=tcpShieldRealIp,proto3" json:"tcp_shield_real_ip,omitempty"`
	// Whether to modify the virtual host header
	ModifyVirtualHost bool `protobuf:"varint,3,opt,name=modify_virtual_host,json=modifyVirtualHost,proto3" json:"modify_virtual_host,omitempty"`
	// Cache TTL for ping responses in milliseconds
	CachePingTtlMs int64 `protobuf:"varint,4,opt,name=cache_ping_ttl_ms,json=cachePingTtlMs,proto3" json:"cache_ping_ttl_ms,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *LiteRouteOptions) Reset() {
	*x = LiteRouteOptions{}
	mi := &file_minekube_gate_v1_gate_service_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LiteRouteOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LiteRouteOptions) ProtoMessage() {}

func (x *LiteRouteOptions) ProtoReflect() protoreflect.Message {
	mi := &file_minekube_gate_v1_gate_service_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LiteRouteOptions.ProtoReflect.Descriptor instead.
func (*LiteRouteOptions) Descriptor() ([]byte, []int) {
	return file_minekube_gate_v1_gate_service_proto_rawDescGZIP(), []int{43}
}

func (x *LiteRouteOptions) GetProxyProtocol() bool {
	if x != nil {
		return x.ProxyProtocol
	}
	return false
}

func (x *LiteRouteOptions) GetTcpShieldRealIp() bool {
	if x != nil {
		return x.TcpShieldRealIp
	}
	return false
}

func (x *LiteRouteOptions) GetModifyVirtualHost() bool {
	if x != nil {
		return x.ModifyVirtualHost
	}
	return false
}

func (x *LiteRouteOptions) GetCachePingTtlMs() int64 {
	if x != nil {
		return x.CachePingTtlMs
	}
	return 0
}

// LiteRouteFallback contains fallback response data served when all backends fail.
type LiteRouteFallback struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// JSON-formatted MOTD for fallback response
	MotdJson string `protobuf:"bytes,1,opt,name=motd_json,json=motdJson,proto3" json:"motd_json,omitempty"`
	// Version information for fallback response
	Version *LiteRouteFallbackVersion `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	// Player count information for fallback response
	Players *LiteRouteFallbackPlayers `protobuf:"bytes,3,opt,name=players,proto3" json:"players,omitempty"`
	// Base64-encoded favicon for fallback response
	Favicon       string `protobuf:"bytes,4,opt,name=favicon,proto3" json:"favicon,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LiteRouteFallback) Reset() {
	*x = LiteRouteFallback{}
	mi := &file_minekube_gate_v1_gate_service_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LiteRouteFallback) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LiteRouteFallback) ProtoMessage() {}

func (x *LiteRouteFallback) ProtoReflect() protoreflect.Message {
	mi := &file_minekube_gate_v1_gate_service_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LiteRouteFallback.ProtoReflect.Descriptor instead.
func (*LiteRouteFallback) Descriptor() ([]byte, []int) {
	return file_minekube_gate_v1_gate_service_proto_rawDescGZIP(), []int{44}
}

func (x *LiteRouteFallback) GetMotdJson() string {
	if x != nil {
		return x.MotdJson
	}
	return ""
}

func (x *LiteRouteFallback) GetVersion() *LiteRouteFallbackVersion {
	if x != nil {
		return x.Version
	}
	return nil
}

func (x *LiteRouteFallback) GetPlayers() *LiteRouteFallbackPlayers {
	if x != nil {
		return x.Players
	}
	return nil
}

func (x *LiteRouteFallback) GetFavicon() string {
	if x != nil {
		return x.Favicon
	}
	return ""
}

// LiteRouteFallbackVersion contains display version metadata.
type LiteRouteFallbackVersion struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Version name displayed to clients
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Protocol version number
	Protocol      int32 `protobuf:"varint,2,opt,name=protocol,proto3" json:"protocol,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LiteRouteFallbackVersion) Reset() {
	*x = LiteRouteFallbackVersion{}
	mi := &file_minekube_gate_v1_gate_service_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LiteRouteFallbackVersion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LiteRouteFallbackVersion) ProtoMessage() {}

func (x *LiteRouteFallbackVersion) ProtoReflect() protoreflect.Message {
	mi := &file_minekube_gate_v1_gate_service_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LiteRouteFallbackVersion.ProtoReflect.Descriptor instead.
func (*LiteRouteFallbackVersion) Descriptor() ([]byte, []int) {
	return file_minekube_gate_v1_gate_service_proto_rawDescGZIP(), []int{45}
}

func (x *LiteRouteFallbackVersion) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *LiteRouteFallbackVersion) GetProtocol() int32 {
	if x != nil {
		return x.Protocol
	}
	return 0
}

// LiteRouteFallbackPlayers contains fallback player counts.
type LiteRouteFallbackPlayers struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Number of online players to display
	Online int32 `protobuf:"varint,1,opt,name=online,proto3" json:"online,omitempty"`
	// Maximum players to display
	Max           int32 `protobuf:"varint,2,opt,name=max,proto3" json:"max,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LiteRouteFallbackPlayers) Reset() {
	*x = LiteRouteFallbackPlayers{}
	mi := &file_minekube_gate_v1_gate_service_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LiteRouteFallbackPlayers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LiteRouteFallbackPlayers) ProtoMessage() {}

func (x *LiteRouteFallbackPlayers) ProtoReflect() protoreflect.Message {
	mi := &file_minekube_gate_v1_gate_service_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LiteRouteFallbackPlayers.ProtoReflect.Descriptor instead.
func (*LiteRouteFallbackPlayers) Descriptor() ([]byte, []int) {
	return file_minekube_gate_v1_gate_service_proto_rawDescGZIP(), []int{46}
}

func (x *LiteRouteFallbackPlayers) GetOnline() int32 {
	if x != nil {
		return x.Online
	}
	return 0
}

func (x *LiteRouteFallbackPlayers) GetMax() int32 {
	if x != nil {
		return x.Max
	}
	return 0
}

// LiteRoute represents a configured lite route and runtime state.
type LiteRoute struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Host patterns this route matches
	Hosts []string `protobuf:"bytes,1,rep,name=hosts,proto3" json:"hosts,omitempty"`
	// Backend servers for this route
	Backends []*LiteRouteBackend `protobuf:"bytes,2,rep,name=backends,proto3" json:"backends,omitempty"`
	// Load balancing strategy
	Strategy LiteRouteStrategy `protobuf:"varint,3,opt,name=strategy,proto3,enum=minekube.gate.v1.LiteRouteStrategy" json:"strategy,omitempty"`
	// Proxy behavior options
	Options *LiteRouteOptions `protobuf:"bytes,4,opt,name=options,proto3" json:"options,omitempty"`
	// Fallback response when all backends fail
	Fallback      *LiteRouteFallback `protobuf:"bytes,5,opt,name=fallback,proto3" json:"fallback,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LiteRoute) Reset() {
	*x = LiteRoute{}
	mi := &file_minekube_gate_v1_gate_service_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LiteRoute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LiteRoute) ProtoMessage() {}

func (x *LiteRoute) ProtoReflect() protoreflect.Message {
	mi := &file_minekube_gate_v1_gate_service_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LiteRoute.ProtoReflect.Descriptor instead.
func (*LiteRoute) Descriptor() ([]byte, []int) {
	return file_minekube_gate_v1_gate_service_proto_rawDescGZIP(), []int{47}
}

func (x *LiteRoute) GetHosts() []string {
	if x != nil {
		return x.Hosts
	}
	return nil
}

func (x *LiteRoute) GetBackends() []*LiteRouteBackend {
	if x != nil {
		return x.Backends
	}
	return nil
}

func (x *LiteRoute) GetStrategy() LiteRouteStrategy {
	if x != nil {
		return x.Strategy
	}
	return LiteRouteStrategy_LITE_ROUTE_STRATEGY_UNSPECIFIED
}

func (x *LiteRoute) GetOptions() *LiteRouteOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *LiteRoute) GetFallback() *LiteRouteFallback {
	if x != nil {
		return x.Fallback
	}
	return nil
}

// UpdateLiteRouteStrategyRequest updates the load-balancing strategy for a route.
type UpdateLiteRouteStrategyRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Host matcher to update (case-insensitive)
	Host string `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	// New load balancing strategy to apply
	Strategy      LiteRouteStrategy `protobuf:"varint,2,opt,name=strategy,proto3,enum=minekube.gate.v1.LiteRouteStrategy" json:"strategy,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateLiteRouteStrategyRequest) Reset() {
	*x = UpdateLiteRouteStrategyRequest{}
	mi := &file_minekube_gate_v1_gate_service_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateLiteRouteStrategyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLiteRouteStrategyRequest) ProtoMessage() {}

func (x *UpdateLiteRouteStrategyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_minekube_gate_v1_gate_service_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLiteRouteStrategyRequest.ProtoReflect.Descriptor instead.
func (*UpdateLiteRouteStrategyRequest) Descriptor() ([]byte, []int) {
	return file_minekube_gate_v1_gate_service_proto_rawDescGZIP(), []int{48}
}

func (x *UpdateLiteRouteStrategyRequest) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *UpdateLiteRouteStrategyRequest) GetStrategy() LiteRouteStrategy {
	if x != nil {
		return x.Strategy
	}
	return LiteRouteStrategy_LITE_ROUTE_STRATEGY_UNSPECIFIED
}

// UpdateLiteRouteStrategyResponse contains validation warnings.
type UpdateLiteRouteStrategyResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Warnings      []string               `protobuf:"bytes,1,rep,name=warnings,proto3" json:"warnings,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateLiteRouteStrategyResponse) Reset() {
	*x = UpdateLiteRouteStrategyResponse{}
	mi := &file_minekube_gate_v1_gate_service_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateLiteRouteStrategyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLiteRouteStrategyResponse) ProtoMessage() {}

func (x *UpdateLiteRouteStrategyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_minekube_gate_v1_gate_service_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLiteRouteStrategyResponse.ProtoReflect.Descriptor instead.
func (*UpdateLiteRouteStrategyResponse) Descriptor() ([]byte, []int) {
	return file_minekube_gate_v1_gate_service_proto_rawDescGZIP(), []int{49}
}

func (x *UpdateLiteRouteStrategyResponse) GetWarnings() []string {
	if x != nil {
		return x.Warnings
	}
	return nil
}

// AddLiteRouteBackendRequest adds a backend to a route.
type AddLiteRouteBackendRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Host matcher to update (case-insensitive)
	Host string `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	// Backend address to add (e.g., "localhost:25565")
	Backend       string `protobuf:"bytes,2,opt,name=backend,proto3" json:"backend,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddLiteRouteBackendRequest) Reset() {
	*x = AddLiteRouteBackendRequest{}
	mi := &file_minekube_gate_v1_gate_service_proto_msgTypes[50]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddLiteRouteBackendRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddLiteRouteBackendRequest) ProtoMessage() {}

func (x *AddLiteRouteBackendRequest) ProtoReflect() protoreflect.Message {
	mi := &file_minekube_gate_v1_gate_service_proto_msgTypes[50]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddLiteRouteBackendRequest.ProtoReflect.Descriptor instead.
func (*AddLiteRouteBackendRequest) Descriptor() ([]byte, []int) {
	return file_minekube_gate_v1_gate_service_proto_rawDescGZIP(), []int{50}
}

func (x *AddLiteRouteBackendRequest) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *AddLiteRouteBackendRequest) GetBackend() string {
	if x != nil {
		return x.Backend
	}
	return ""
}

// AddLiteRouteBackendResponse contains validation warnings.
type AddLiteRouteBackendResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Warnings      []string               `protobuf:"bytes,1,rep,name=warnings,proto3" json:"warnings,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddLiteRouteBackendResponse) Reset() {
	*x = AddLiteRouteBackendResponse{}
	mi := &file_minekube_gate_v1_gate_service_proto_msgTypes[51]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddLiteRouteBackendResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddLiteRouteBackendResponse) ProtoMessage() {}

func (x *AddLiteRouteBackendResponse) ProtoReflect() protoreflect.Message {
	mi := &file_minekube_gate_v1_gate_service_proto_msgTypes[51]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddLiteRouteBackendResponse.ProtoReflect.Descriptor instead.
func (*AddLiteRouteBackendResponse) Descriptor() ([]byte, []int) {
	return file_minekube_gate_v1_gate_service_proto_rawDescGZIP(), []int{51}
}

func (x *AddLiteRouteBackendResponse) GetWarnings() []string {
	if x != nil {
		return x.Warnings
	}
	return nil
}

// RemoveLiteRouteBackendRequest removes a backend from a route.
type RemoveLiteRouteBackendRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Host matcher to update (case-insensitive)
	Host string `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	// Backend address to remove
	Backend       string `protobuf:"bytes,2,opt,name=backend,proto3" json:"backend,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveLiteRouteBackendRequest) Reset() {
	*x = RemoveLiteRouteBackendRequest{}
	mi := &file_minekube_gate_v1_gate_service_proto_msgTypes[52]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveLiteRouteBackendRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveLiteRouteBackendRequest) ProtoMessage() {}

func (x *RemoveLiteRouteBackendRequest) ProtoReflect() protoreflect.Message {
	mi := &file_minekube_gate_v1_gate_service_proto_msgTypes[52]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveLiteRouteBackendRequest.ProtoReflect.Descriptor instead.
func (*RemoveLiteRouteBackendRequest) Descriptor() ([]byte, []int) {
	return file_minekube_gate_v1_gate_service_proto_rawDescGZIP(), []int{52}
}

func (x *RemoveLiteRouteBackendRequest) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *RemoveLiteRouteBackendRequest) GetBackend() string {
	if x != nil {
		return x.Backend
	}
	return ""
}

// RemoveLiteRouteBackendResponse contains validation warnings.
type RemoveLiteRouteBackendResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Warnings      []string               `protobuf:"bytes,1,rep,name=warnings,proto3" json:"warnings,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveLiteRouteBackendResponse) Reset() {
	*x = RemoveLiteRouteBackendResponse{}
	mi := &file_minekube_gate_v1_gate_service_proto_msgTypes[53]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveLiteRouteBackendResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveLiteRouteBackendResponse) ProtoMessage() {}

func (x *RemoveLiteRouteBackendResponse) ProtoReflect() protoreflect.Message {
	mi := &file_minekube_gate_v1_gate_service_proto_msgTypes[53]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveLiteRouteBackendResponse.ProtoReflect.Descriptor instead.
func (*RemoveLiteRouteBackendResponse) Descriptor() ([]byte, []int) {
	return file_minekube_gate_v1_gate_service_proto_rawDescGZIP(), []int{53}
}

func (x *RemoveLiteRouteBackendResponse) GetWarnings() []string {
	if x != nil {
		return x.Warnings
	}
	return nil
}

// UpdateLiteRouteOptionsRequest updates per-route options using a field mask.
type UpdateLiteRouteOptionsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Host matcher to update (case-insensitive)
	Host string `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	// New options to apply
	Options *LiteRouteOptions `protobuf:"bytes,2,opt,name=options,proto3" json:"options,omitempty"`
	// Field mask specifying which options to update
	UpdateMask    *fieldmaskpb.FieldMask `protobuf:"bytes,3,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateLiteRouteOptionsRequest) Reset() {
	*x = UpdateLiteRouteOptionsRequest{}
	mi := &file_minekube_gate_v1_gate_service_proto_msgTypes[54]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateLiteRouteOptionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLiteRouteOptionsRequest) ProtoMessage() {}

func (x *UpdateLiteRouteOptionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_minekube_gate_v1_gate_service_proto_msgTypes[54]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLiteRouteOptionsRequest.ProtoReflect.Descriptor instead.
func (*UpdateLiteRouteOptionsRequest) Descriptor() ([]byte, []int) {
	return file_minekube_gate_v1_gate_service_proto_rawDescGZIP(), []int{54}
}

func (x *UpdateLiteRouteOptionsRequest) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *UpdateLiteRouteOptionsRequest) GetOptions() *LiteRouteOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *UpdateLiteRouteOptionsRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

// UpdateLiteRouteOptionsResponse contains validation warnings.
type UpdateLiteRouteOptionsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Warnings      []string               `protobuf:"bytes,1,rep,name=warnings,proto3" json:"warnings,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateLiteRouteOptionsResponse) Reset() {
	*x = UpdateLiteRouteOptionsResponse{}
	mi := &file_minekube_gate_v1_gate_service_proto_msgTypes[55]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateLiteRouteOptionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLiteRouteOptionsResponse) ProtoMessage() {}

func (x *UpdateLiteRouteOptionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_minekube_gate_v1_gate_service_proto_msgTypes[55]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLiteRouteOptionsResponse.ProtoReflect.Descriptor instead.
func (*UpdateLiteRouteOptionsResponse) Descriptor() ([]byte, []int) {
	return file_minekube_gate_v1_gate_service_proto_rawDescGZIP(), []int{55}
}

func (x *UpdateLiteRouteOptionsResponse) GetWarnings() []string {
	if x != nil {
		return x.Warnings
	}
	return nil
}

// UpdateLiteRouteFallbackRequest updates fallback metadata using a field mask.
type UpdateLiteRouteFallbackRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Host matcher to update (case-insensitive)
	Host string `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	// New fallback configuration to apply
	Fallback *LiteRouteFallback `protobuf:"bytes,2,opt,name=fallback,proto3" json:"fallback,omitempty"`
	// Field mask specifying which fallback fields to update
	UpdateMask    *fieldmaskpb.FieldMask `protobuf:"bytes,3,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateLiteRouteFallbackRequest) Reset() {
	*x = UpdateLiteRouteFallbackRequest{}
	mi := &file_minekube_gate_v1_gate_service_proto_msgTypes[56]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateLiteRouteFallbackRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLiteRouteFallbackRequest) ProtoMessage() {}

func (x *UpdateLiteRouteFallbackRequest) ProtoReflect() protoreflect.Message {
	mi := &file_minekube_gate_v1_gate_service_proto_msgTypes[56]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLiteRouteFallbackRequest.ProtoReflect.Descriptor instead.
func (*UpdateLiteRouteFallbackRequest) Descriptor() ([]byte, []int) {
	return file_minekube_gate_v1_gate_service_proto_rawDescGZIP(), []int{56}
}

func (x *UpdateLiteRouteFallbackRequest) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *UpdateLiteRouteFallbackRequest) GetFallback() *LiteRouteFallback {
	if x != nil {
		return x.Fallback
	}
	return nil
}

func (x *UpdateLiteRouteFallbackRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

// UpdateLiteRouteFallbackResponse contains validation warnings.
type UpdateLiteRouteFallbackResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Warnings      []string               `protobuf:"bytes,1,rep,name=warnings,proto3" json:"warnings,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateLiteRouteFallbackResponse) Reset() {
	*x = UpdateLiteRouteFallbackResponse{}
	mi := &file_minekube_gate_v1_gate_service_proto_msgTypes[57]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateLiteRouteFallbackResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLiteRouteFallbackResponse) ProtoMessage() {}

func (x *UpdateLiteRouteFallbackResponse) ProtoReflect() protoreflect.Message {
	mi := &file_minekube_gate_v1_gate_service_proto_msgTypes[57]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLiteRouteFallbackResponse.ProtoReflect.Descriptor instead.
func (*UpdateLiteRouteFallbackResponse) Descriptor() ([]byte, []int) {
	return file_minekube_gate_v1_gate_service_proto_rawDescGZIP(), []int{57}
}

func (x *UpdateLiteRouteFallbackResponse) GetWarnings() []string {
	if x != nil {
		return x.Warnings
	}
	return nil
}

var File_minekube_gate_v1_gate_service_proto protoreflect.FileDescriptor

const file_minekube_gate_v1_gate_service_proto_rawDesc = "" +
	"\n" +
	"#minekube/gate/v1/gate_service.proto\x12\x10minekube.gate.v1\x1a google/protobuf/field_mask.proto\x1a\x1cgoogle/protobuf/struct.proto\"X\n" +
	"\x12StoreCookieRequest\x12\x16\n" +
	"\x06player\x18\x01 \x01(\tR\x06player\x12\x10\n" +
	"\x03key\x18\x02 \x01(\tR\x03key\x12\x18\n" +
	"\apayload\x18\x03 \x01(\fR\apayload\"\x15\n" +
	"\x13StoreCookieResponse\"@\n" +
	"\x14RequestCookieRequest\x12\x16\n" +
	"\x06player\x18\x01 \x01(\tR\x06player\x12\x10\n" +
	"\x03key\x18\x02 \x01(\tR\x03key\"1\n" +
	"\x15RequestCookieResponse\x12\x18\n" +
	"\apayload\x18\x01 \x01(\fR\apayload\"I\n" +
	"\x17DisconnectPlayerRequest\x12\x16\n" +
	"\x06player\x18\x01 \x01(\tR\x06player\x12\x16\n" +
	"\x06reason\x18\x02 \x01(\tR\x06reason\"\x1a\n" +
	"\x18DisconnectPlayerResponse\"F\n" +
	"\x14ConnectPlayerRequest\x12\x16\n" +
	"\x06player\x18\x01 \x01(\tR\x06player\x12\x16\n" +
	"\x06server\x18\x02 \x01(\tR\x06server\"\x17\n" +
	"\x15ConnectPlayerResponse\"E\n" +
	"\x15RegisterServerRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x18\n" +
	"\aaddress\x18\x02 \x01(\tR\aaddress\"\x18\n" +
	"\x16RegisterServerResponse\"G\n" +
	"\x17UnregisterServerRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x18\n" +
	"\aaddress\x18\x02 \x01(\tR\aaddress\"\x1a\n" +
	"\x18UnregisterServerResponse\"\x14\n" +
	"\x12ListServersRequest\"I\n" +
	"\x13ListServersResponse\x122\n" +
	"\aservers\x18\x01 \x03(\v2\x18.minekube.gate.v1.ServerR\aservers\"P\n" +
	"\x06Server\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x18\n" +
	"\aaddress\x18\x02 \x01(\tR\aaddress\x12\x18\n" +
	"\aplayers\x18\x03 \x01(\x05R\aplayers\">\n" +
	"\x10GetPlayerRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1a\n" +
	"\busername\x18\x02 \x01(\tR\busername\"E\n" +
	"\x11GetPlayerResponse\x120\n" +
	"\x06player\x18\x01 \x01(\v2\x18.minekube.gate.v1.PlayerR\x06player\".\n" +
	"\x12ListPlayersRequest\x12\x18\n" +
	"\aservers\x18\x01 \x03(\tR\aservers\"I\n" +
	"\x13ListPlayersResponse\x122\n" +
	"\aplayers\x18\x01 \x03(\v2\x18.minekube.gate.v1.PlayerR\aplayers\"s\n" +
	"\x06Player\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1a\n" +
	"\busername\x18\x02 \x01(\tR\busername\x12=\n" +
	"\abedrock\x18\x03 \x01(\v2#.minekube.gate.v1.BedrockPlayerDataR\abedrock\"\xd1\x02\n" +
	"\x11BedrockPlayerData\x12\x12\n" +
	"\x04xuid\x18\x01 \x01(\x03R\x04xuid\x12>\n" +
	"\tdevice_os\x18\x02 \x01(\x0e2!.minekube.gate.v1.BedrockDeviceOSR\bdeviceOs\x12\x1a\n" +
	"\blanguage\x18\x03 \x01(\tR\blanguage\x12A\n" +
	"\n" +
	"ui_profile\x18\x04 \x01(\x0e2\".minekube.gate.v1.BedrockUIProfileR\tuiProfile\x12A\n" +
	"\n" +
	"input_mode\x18\x05 \x01(\x0e2\".minekube.gate.v1.BedrockInputModeR\tinputMode\x12!\n" +
	"\fbehind_proxy\x18\x06 \x01(\bR\vbehindProxy\x12#\n" +
	"\rlinked_player\x18\a \x01(\tR\flinkedPlayer\"\x12\n" +
	"\x10GetStatusRequest\"\xd6\x01\n" +
	"\x11GetStatusResponse\x12\x18\n" +
	"\aversion\x18\x01 \x01(\tR\aversion\x12/\n" +
	"\x04mode\x18\x02 \x01(\x0e2\x1b.minekube.gate.v1.ProxyModeR\x04mode\x12:\n" +
	"\aclassic\x18\x03 \x01(\v2\x1e.minekube.gate.v1.ClassicStatsH\x00R\aclassic\x121\n" +
	"\x04lite\x18\x04 \x01(\v2\x1b.minekube.gate.v1.LiteStatsH\x00R\x04liteB\a\n" +
	"\x05stats\"B\n" +
	"\fClassicStats\x12\x18\n" +
	"\aplayers\x18\x01 \x01(\x05R\aplayers\x12\x18\n" +
	"\aservers\x18\x02 \x01(\x05R\aservers\"E\n" +
	"\tLiteStats\x12 \n" +
	"\vconnections\x18\x01 \x01(\x05R\vconnections\x12\x16\n" +
	"\x06routes\x18\x02 \x01(\x05R\x06routes\"\xac\x01\n" +
	"\n" +
	"GateConfig\x12-\n" +
	"\x03api\x18\x01 \x01(\v2\x1b.minekube.gate.v1.APIConfigR\x03api\x129\n" +
	"\aconnect\x18\x02 \x01(\v2\x1f.minekube.gate.v1.ConnectConfigR\aconnect\x124\n" +
	"\x06config\x18\x03 \x01(\v2\x1c.minekube.gate.v1.JavaConfigR\x06config\"9\n" +
	"\tAPIConfig\x12\x18\n" +
	"\aenabled\x18\x01 \x01(\bR\aenabled\x12\x12\n" +
	"\x04bind\x18\x02 \x01(\tR\x04bind\"z\n" +
	"\rConnectConfig\x12\x18\n" +
	"\aenabled\x18\x01 \x01(\bR\aenabled\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12;\n" +
	"\x1aallow_offline_mode_players\x18\x03 \x01(\bR\x17allowOfflineModePlayers\"\x9c\x04\n" +
	"\n" +
	"JavaConfig\x12\x12\n" +
	"\x04bind\x18\x01 \x01(\tR\x04bind\x12\x1f\n" +
	"\vonline_mode\x18\x02 \x01(\bR\n" +
	"onlineMode\x12B\n" +
	"\n" +
	"forwarding\x18\x03 \x01(\v2\".minekube.gate.v1.ForwardingConfigR\n" +
	"forwarding\x126\n" +
	"\x06status\x18\x04 \x01(\v2\x1e.minekube.gate.v1.StatusConfigR\x06status\x12C\n" +
	"\aservers\x18\x05 \x03(\v2).minekube.gate.v1.JavaConfig.ServersEntryR\aservers\x12\x10\n" +
	"\x03try\x18\x06 \x03(\tR\x03try\x12*\n" +
	"\x11forced_hosts_json\x18\a \x01(\tR\x0fforcedHostsJson\x12)\n" +
	"\x10accept_transfers\x18\b \x01(\bR\x0facceptTransfers\x12A\n" +
	"\x1dbungee_plugin_channel_enabled\x18\t \x01(\bR\x1abungeePluginChannelEnabled\x120\n" +
	"\x04lite\x18\n" +
	" \x01(\v2\x1c.minekube.gate.v1.LiteConfigR\x04lite\x1a:\n" +
	"\fServersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x7f\n" +
	"\x10ForwardingConfig\x12\x12\n" +
	"\x04mode\x18\x01 \x01(\tR\x04mode\x12'\n" +
	"\x0fvelocity_secret\x18\x02 \x01(\tR\x0evelocitySecret\x12.\n" +
	"\x13bungee_guard_secret\x18\x03 \x01(\tR\x11bungeeGuardSecret\"\xb9\x01\n" +
	"\fStatusConfig\x12\x12\n" +
	"\x04motd\x18\x01 \x01(\tR\x04motd\x12(\n" +
	"\x10show_max_players\x18\x02 \x01(\x05R\x0eshowMaxPlayers\x12\x18\n" +
	"\afavicon\x18\x03 \x01(\tR\afavicon\x12*\n" +
	"\x11log_ping_requests\x18\x04 \x01(\bR\x0flogPingRequests\x12%\n" +
	"\x0eannounce_forge\x18\x05 \x01(\bR\rannounceForge\"[\n" +
	"\n" +
	"LiteConfig\x12\x18\n" +
	"\aenabled\x18\x01 \x01(\bR\aenabled\x123\n" +
	"\x06routes\x18\x02 \x03(\v2\x1b.minekube.gate.v1.LiteRouteR\x06routes\"\x12\n" +
	"\x10GetConfigRequest\"-\n" +
	"\x11GetConfigResponse\x12\x18\n" +
	"\apayload\x18\x01 \x01(\tR\apayload\"/\n" +
	"\x15ValidateConfigRequest\x12\x16\n" +
	"\x06config\x18\x01 \x01(\tR\x06config\"L\n" +
	"\x16ValidateConfigResponse\x12\x1a\n" +
	"\bwarnings\x18\x01 \x03(\tR\bwarnings\x12\x16\n" +
	"\x06errors\x18\x02 \x03(\tR\x06errors\"F\n" +
	"\x12ApplyConfigRequest\x12\x16\n" +
	"\x06config\x18\x01 \x01(\tR\x06config\x12\x18\n" +
	"\apersist\x18\x02 \x01(\bR\apersist\"1\n" +
	"\x13ApplyConfigResponse\x12\x1a\n" +
	"\bwarnings\x18\x01 \x03(\tR\bwarnings\"\x17\n" +
	"\x15ListLiteRoutesRequest\"M\n" +
	"\x16ListLiteRoutesResponse\x123\n" +
	"\x06routes\x18\x01 \x03(\v2\x1b.minekube.gate.v1.LiteRouteR\x06routes\")\n" +
	"\x13GetLiteRouteRequest\x12\x12\n" +
	"\x04host\x18\x01 \x01(\tR\x04host\"I\n" +
	"\x14GetLiteRouteResponse\x121\n" +
	"\x05route\x18\x01 \x01(\v2\x1b.minekube.gate.v1.LiteRouteR\x05route\"[\n" +
	"\x10LiteRouteBackend\x12\x18\n" +
	"\aaddress\x18\x01 \x01(\tR\aaddress\x12-\n" +
	"\x12active_connections\x18\x02 \x01(\rR\x11activeConnections\"\xc1\x01\n" +
	"\x10LiteRouteOptions\x12%\n" +
	"\x0eproxy_protocol\x18\x01 \x01(\bR\rproxyProtocol\x12+\n" +
	"\x12tcp_shield_real_ip\x18\x02 \x01(\bR\x0ftcpShieldRealIp\x12.\n" +
	"\x13modify_virtual_host\x18\x03 \x01(\bR\x11modifyVirtualHost\x12)\n" +
	"\x11cache_ping_ttl_ms\x18\x04 \x01(\x03R\x0ecachePingTtlMs\"\xd6\x01\n" +
	"\x11LiteRouteFallback\x12\x1b\n" +
	"\tmotd_json\x18\x01 \x01(\tR\bmotdJson\x12D\n" +
	"\aversion\x18\x02 \x01(\v2*.minekube.gate.v1.LiteRouteFallbackVersionR\aversion\x12D\n" +
	"\aplayers\x18\x03 \x01(\v2*.minekube.gate.v1.LiteRouteFallbackPlayersR\aplayers\x12\x18\n" +
	"\afavicon\x18\x04 \x01(\tR\afavicon\"J\n" +
	"\x18LiteRouteFallbackVersion\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1a\n" +
	"\bprotocol\x18\x02 \x01(\x05R\bprotocol\"D\n" +
	"\x18LiteRouteFallbackPlayers\x12\x16\n" +
	"\x06online\x18\x01 \x01(\x05R\x06online\x12\x10\n" +
	"\x03max\x18\x02 \x01(\x05R\x03max\"\xa1\x02\n" +
	"\tLiteRoute\x12\x14\n" +
	"\x05hosts\x18\x01 \x03(\tR\x05hosts\x12>\n" +
	"\bbackends\x18\x02 \x03(\v2\".minekube.gate.v1.LiteRouteBackendR\bbackends\x12?\n" +
	"\bstrategy\x18\x03 \x01(\x0e2#.minekube.gate.v1.LiteRouteStrategyR\bstrategy\x12<\n" +
	"\aoptions\x18\x04 \x01(\v2\".minekube.gate.v1.LiteRouteOptionsR\aoptions\x12?\n" +
	"\bfallback\x18\x05 \x01(\v2#.minekube.gate.v1.LiteRouteFallbackR\bfallback\"u\n" +
	"\x1eUpdateLiteRouteStrategyRequest\x12\x12\n" +
	"\x04host\x18\x01 \x01(\tR\x04host\x12?\n" +
	"\bstrategy\x18\x02 \x01(\x0e2#.minekube.gate.v1.LiteRouteStrategyR\bstrategy\"=\n" +
	"\x1fUpdateLiteRouteStrategyResponse\x12\x1a\n" +
	"\bwarnings\x18\x01 \x03(\tR\bwarnings\"J\n" +
	"\x1aAddLiteRouteBackendRequest\x12\x12\n" +
	"\x04host\x18\x01 \x01(\tR\x04host\x12\x18\n" +
	"\abackend\x18\x02 \x01(\tR\abackend\"9\n" +
	"\x1bAddLiteRouteBackendResponse\x12\x1a\n" +
	"\bwarnings\x18\x01 \x03(\tR\bwarnings\"M\n" +
	"\x1dRemoveLiteRouteBackendRequest\x12\x12\n" +
	"\x04host\x18\x01 \x01(\tR\x04host\x12\x18\n" +
	"\abackend\x18\x02 \x01(\tR\abackend\"<\n" +
	"\x1eRemoveLiteRouteBackendResponse\x12\x1a\n" +
	"\bwarnings\x18\x01 \x03(\tR\bwarnings\"\xae\x01\n" +
	"\x1dUpdateLiteRouteOptionsRequest\x12\x12\n" +
	"\x04host\x18\x01 \x01(\tR\x04host\x12<\n" +
	"\aoptions\x18\x02 \x01(\v2\".minekube.gate.v1.LiteRouteOptionsR\aoptions\x12;\n" +
	"\vupdate_mask\x18\x03 \x01(\v2\x1a.google.protobuf.FieldMaskR\n" +
	"updateMask\"<\n" +
	"\x1eUpdateLiteRouteOptionsResponse\x12\x1a\n" +
	"\bwarnings\x18\x01 \x03(\tR\bwarnings\"\xb2\x01\n" +
	"\x1eUpdateLiteRouteFallbackRequest\x12\x12\n" +
	"\x04host\x18\x01 \x01(\tR\x04host\x12?\n" +
	"\bfallback\x18\x02 \x01(\v2#.minekube.gate.v1.LiteRouteFallbackR\bfallback\x12;\n" +
	"\vupdate_mask\x18\x03 \x01(\v2\x1a.google.protobuf.FieldMaskR\n" +
	"updateMask\"=\n" +
	"\x1fUpdateLiteRouteFallbackResponse\x12\x1a\n" +
	"\bwarnings\x18\x01 \x03(\tR\bwarnings*T\n" +
	"\tProxyMode\x12\x1a\n" +
	"\x16PROXY_MODE_UNSPECIFIED\x10\x00\x12\x16\n" +
	"\x12PROXY_MODE_CLASSIC\x10\x01\x12\x13\n" +
	"\x0fPROXY_MODE_LITE\x10\x02*\xad\x04\n" +
	"\x0fBedrockDeviceOS\x12!\n" +
	"\x1dBEDROCK_DEVICE_OS_UNSPECIFIED\x10\x00\x12\x1d\n" +
	"\x19BEDROCK_DEVICE_OS_UNKNOWN\x10\x01\x12\x1d\n" +
	"\x19BEDROCK_DEVICE_OS_ANDROID\x10\x02\x12\x19\n" +
	"\x15BEDROCK_DEVICE_OS_IOS\x10\x03\x12\x1b\n" +
	"\x17BEDROCK_DEVICE_OS_MACOS\x10\x04\x12\x1c\n" +
	"\x18BEDROCK_DEVICE_OS_AMAZON\x10\x05\x12\x1d\n" +
	"\x19BEDROCK_DEVICE_OS_GEAR_VR\x10\x06\x12\x1e\n" +
	"\x1aBEDROCK_DEVICE_OS_HOLOLENS\x10\a\x12!\n" +
	"\x1dBEDROCK_DEVICE_OS_WINDOWS_UWP\x10\b\x12!\n" +
	"\x1dBEDROCK_DEVICE_OS_WINDOWS_X86\x10\t\x12\x1f\n" +
	"\x1bBEDROCK_DEVICE_OS_DEDICATED\x10\n" +
	"\x12\x1e\n" +
	"\x1aBEDROCK_DEVICE_OS_APPLE_TV\x10\v\x12!\n" +
	"\x1dBEDROCK_DEVICE_OS_PLAYSTATION\x10\f\x12\x1c\n" +
	"\x18BEDROCK_DEVICE_OS_SWITCH\x10\r\x12\x1a\n" +
	"\x16BEDROCK_DEVICE_OS_XBOX\x10\x0e\x12#\n" +
	"\x1fBEDROCK_DEVICE_OS_WINDOWS_PHONE\x10\x0f\x12\x1b\n" +
	"\x17BEDROCK_DEVICE_OS_LINUX\x10\x10*\xdc\x01\n" +
	"\x10BedrockInputMode\x12\"\n" +
	"\x1eBEDROCK_INPUT_MODE_UNSPECIFIED\x10\x00\x12\x1e\n" +
	"\x1aBEDROCK_INPUT_MODE_UNKNOWN\x10\x01\x12\x1c\n" +
	"\x18BEDROCK_INPUT_MODE_MOUSE\x10\x02\x12\x1c\n" +
	"\x18BEDROCK_INPUT_MODE_TOUCH\x10\x03\x12\x1e\n" +
	"\x1aBEDROCK_INPUT_MODE_GAMEPAD\x10\x04\x12(\n" +
	"$BEDROCK_INPUT_MODE_MOTION_CONTROLLER\x10\x05*u\n" +
	"\x10BedrockUIProfile\x12\"\n" +
	"\x1eBEDROCK_UI_PROFILE_UNSPECIFIED\x10\x00\x12\x1e\n" +
	"\x1aBEDROCK_UI_PROFILE_CLASSIC\x10\x01\x12\x1d\n" +
	"\x19BEDROCK_UI_PROFILE_POCKET\x10\x02*\xf4\x01\n" +
	"\x11LiteRouteStrategy\x12#\n" +
	"\x1fLITE_ROUTE_STRATEGY_UNSPECIFIED\x10\x00\x12\"\n" +
	"\x1eLITE_ROUTE_STRATEGY_SEQUENTIAL\x10\x01\x12\x1e\n" +
	"\x1aLITE_ROUTE_STRATEGY_RANDOM\x10\x02\x12#\n" +
	"\x1fLITE_ROUTE_STRATEGY_ROUND_ROBIN\x10\x03\x12)\n" +
	"%LITE_ROUTE_STRATEGY_LEAST_CONNECTIONS\x10\x04\x12&\n" +
	"\"LITE_ROUTE_STRATEGY_LOWEST_LATENCY\x10\x052\xe3\t\n" +
	"\vGateService\x12T\n" +
	"\tGetPlayer\x12\".minekube.gate.v1.GetPlayerRequest\x1a#.minekube.gate.v1.GetPlayerResponse\x12Z\n" +
	"\vListPlayers\x12$.minekube.gate.v1.ListPlayersRequest\x1a%.minekube.gate.v1.ListPlayersResponse\x12Z\n" +
	"\vListServers\x12$.minekube.gate.v1.ListServersRequest\x1a%.minekube.gate.v1.ListServersResponse\x12c\n" +
	"\x0eRegisterServer\x12'.minekube.gate.v1.RegisterServerRequest\x1a(.minekube.gate.v1.RegisterServerResponse\x12i\n" +
	"\x10UnregisterServer\x12).minekube.gate.v1.UnregisterServerRequest\x1a*.minekube.gate.v1.UnregisterServerResponse\x12`\n" +
	"\rConnectPlayer\x12&.minekube.gate.v1.ConnectPlayerRequest\x1a'.minekube.gate.v1.ConnectPlayerResponse\x12i\n" +
	"\x10DisconnectPlayer\x12).minekube.gate.v1.DisconnectPlayerRequest\x1a*.minekube.gate.v1.DisconnectPlayerResponse\x12Z\n" +
	"\vStoreCookie\x12$.minekube.gate.v1.StoreCookieRequest\x1a%.minekube.gate.v1.StoreCookieResponse\x12`\n" +
	"\rRequestCookie\x12&.minekube.gate.v1.RequestCookieRequest\x1a'.minekube.gate.v1.RequestCookieResponse\x12T\n" +
	"\tGetStatus\x12\".minekube.gate.v1.GetStatusRequest\x1a#.minekube.gate.v1.GetStatusResponse\x12T\n" +
	"\tGetConfig\x12\".minekube.gate.v1.GetConfigRequest\x1a#.minekube.gate.v1.GetConfigResponse\x12c\n" +
	"\x0eValidateConfig\x12'.minekube.gate.v1.ValidateConfigRequest\x1a(.minekube.gate.v1.ValidateConfigResponse\x12Z\n" +
	"\vApplyConfig\x12$.minekube.gate.v1.ApplyConfigRequest\x1a%.minekube.gate.v1.ApplyConfigResponse2\xc3\x06\n" +
	"\x0fGateLiteService\x12c\n" +
	"\x0eListLiteRoutes\x12'.minekube.gate.v1.ListLiteRoutesRequest\x1a(.minekube.gate.v1.ListLiteRoutesResponse\x12]\n" +
	"\fGetLiteRoute\x12%.minekube.gate.v1.GetLiteRouteRequest\x1a&.minekube.gate.v1.GetLiteRouteResponse\x12~\n" +
	"\x17UpdateLiteRouteStrategy\x120.minekube.gate.v1.UpdateLiteRouteStrategyRequest\x1a1.minekube.gate.v1.UpdateLiteRouteStrategyResponse\x12r\n" +
	"\x13AddLiteRouteBackend\x12,.minekube.gate.v1.AddLiteRouteBackendRequest\x1a-.minekube.gate.v1.AddLiteRouteBackendResponse\x12{\n" +
	"\x16RemoveLiteRouteBackend\x12/.minekube.gate.v1.RemoveLiteRouteBackendRequest\x1a0.minekube.gate.v1.RemoveLiteRouteBackendResponse\x12{\n" +
	"\x16UpdateLiteRouteOptions\x12/.minekube.gate.v1.UpdateLiteRouteOptionsRequest\x1a0.minekube.gate.v1.UpdateLiteRouteOptionsResponse\x12~\n" +
	"\x17UpdateLiteRouteFallback\x120.minekube.gate.v1.UpdateLiteRouteFallbackRequest\x1a1.minekube.gate.v1.UpdateLiteRouteFallbackResponseB\xcd\x01\n" +
	"\x14com.minekube.gate.v1B\x10GateServiceProtoP\x01ZAgo.minekube.com/gate/pkg/internal/api/gen/minekube/gate/v1;gatev1\xa2\x02\x03MGX\xaa\x02\x10Minekube.Gate.V1\xca\x02\x10Minekube\\Gate\\V1\xe2\x02\x1cMinekube\\Gate\\V1\\GPBMetadata\xea\x02\x12Minekube::Gate::V1b\x06proto3"

var (
	file_minekube_gate_v1_gate_service_proto_rawDescOnce sync.Once
	file_minekube_gate_v1_gate_service_proto_rawDescData []byte
)

func file_minekube_gate_v1_gate_service_proto_rawDescGZIP() []byte {
	file_minekube_gate_v1_gate_service_proto_rawDescOnce.Do(func() {
		file_minekube_gate_v1_gate_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_minekube_gate_v1_gate_service_proto_rawDesc), len(file_minekube_gate_v1_gate_service_proto_rawDesc)))
	})
	return file_minekube_gate_v1_gate_service_proto_rawDescData
}

var file_minekube_gate_v1_gate_service_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_minekube_gate_v1_gate_service_proto_msgTypes = make([]protoimpl.MessageInfo, 59)
var file_minekube_gate_v1_gate_service_proto_goTypes = []any{
	(ProxyMode)(0),                          // 0: minekube.gate.v1.ProxyMode
	(BedrockDeviceOS)(0),                    // 1: minekube.gate.v1.BedrockDeviceOS
	(BedrockInputMode)(0),                   // 2: minekube.gate.v1.BedrockInputMode
	(BedrockUIProfile)(0),                   // 3: minekube.gate.v1.BedrockUIProfile
	(LiteRouteStrategy)(0),                  // 4: minekube.gate.v1.LiteRouteStrategy
	(*StoreCookieRequest)(nil),              // 5: minekube.gate.v1.StoreCookieRequest
	(*StoreCookieResponse)(nil),             // 6: minekube.gate.v1.StoreCookieResponse
	(*RequestCookieRequest)(nil),            // 7: minekube.gate.v1.RequestCookieRequest
	(*RequestCookieResponse)(nil),           // 8: minekube.gate.v1.RequestCookieResponse
	(*DisconnectPlayerRequest)(nil),         // 9: minekube.gate.v1.DisconnectPlayerRequest
	(*DisconnectPlayerResponse)(nil),        // 10: minekube.gate.v1.DisconnectPlayerResponse
	(*ConnectPlayerRequest)(nil),            // 11: minekube.gate.v1.ConnectPlayerRequest
	(*ConnectPlayerResponse)(nil),           // 12: minekube.gate.v1.ConnectPlayerResponse
	(*RegisterServerRequest)(nil),           // 13: minekube.gate.v1.RegisterServerRequest
	(*RegisterServerResponse)(nil),          // 14: minekube.gate.v1.RegisterServerResponse
	(*UnregisterServerRequest)(nil),         // 15: minekube.gate.v1.UnregisterServerRequest
	(*UnregisterServerResponse)(nil),        // 16: minekube.gate.v1.UnregisterServerResponse
	(*ListServersRequest)(nil),              // 17: minekube.gate.v1.ListServersRequest
	(*ListServersResponse)(nil),             // 18: minekube.gate.v1.ListServersResponse
	(*Server)(nil),                          // 19: minekube.gate.v1.Server
	(*GetPlayerRequest)(nil),                // 20: minekube.gate.v1.GetPlayerRequest
	(*GetPlayerResponse)(nil),               // 21: minekube.gate.v1.GetPlayerResponse
	(*ListPlayersRequest)(nil),              // 22: minekube.gate.v1.ListPlayersRequest
	(*ListPlayersResponse)(nil),             // 23: minekube.gate.v1.ListPlayersResponse
	(*Player)(nil),                          // 24: minekube.gate.v1.Player
	(*BedrockPlayerData)(nil),               // 25: minekube.gate.v1.BedrockPlayerData
	(*GetStatusRequest)(nil),                // 26: minekube.gate.v1.GetStatusRequest
	(*GetStatusResponse)(nil),               // 27: minekube.gate.v1.GetStatusResponse
	(*ClassicStats)(nil),                    // 28: minekube.gate.v1.ClassicStats
	(*LiteStats)(nil),                       // 29: minekube.gate.v1.LiteStats
	(*GateConfig)(nil),                      // 30: minekube.gate.v1.GateConfig
	(*APIConfig)(nil),                       // 31: minekube.gate.v1.APIConfig
	(*ConnectConfig)(nil),                   // 32: minekube.gate.v1.ConnectConfig
	(*JavaConfig)(nil),                      // 33: minekube.gate.v1.JavaConfig
	(*ForwardingConfig)(nil),                // 34: minekube.gate.v1.ForwardingConfig
	(*StatusConfig)(nil),                    // 35: minekube.gate.v1.StatusConfig
	(*LiteConfig)(nil),                      // 36: minekube.gate.v1.LiteConfig
	(*GetConfigRequest)(nil),                // 37: minekube.gate.v1.GetConfigRequest
	(*GetConfigResponse)(nil),               // 38: minekube.gate.v1.GetConfigResponse
	(*ValidateConfigRequest)(nil),           // 39: minekube.gate.v1.ValidateConfigRequest
	(*ValidateConfigResponse)(nil),          // 40: minekube.gate.v1.ValidateConfigResponse
	(*ApplyConfigRequest)(nil),              // 41: minekube.gate.v1.ApplyConfigRequest
	(*ApplyConfigResponse)(nil),             // 42: minekube.gate.v1.ApplyConfigResponse
	(*ListLiteRoutesRequest)(nil),           // 43: minekube.gate.v1.ListLiteRoutesRequest
	(*ListLiteRoutesResponse)(nil),          // 44: minekube.gate.v1.ListLiteRoutesResponse
	(*GetLiteRouteRequest)(nil),             // 45: minekube.gate.v1.GetLiteRouteRequest
	(*GetLiteRouteResponse)(nil),            // 46: minekube.gate.v1.GetLiteRouteResponse
	(*LiteRouteBackend)(nil),                // 47: minekube.gate.v1.LiteRouteBackend
	(*LiteRouteOptions)(nil),                // 48: minekube.gate.v1.LiteRouteOptions
	(*LiteRouteFallback)(nil),               // 49: minekube.gate.v1.LiteRouteFallback
	(*LiteRouteFallbackVersion)(nil),        // 50: minekube.gate.v1.LiteRouteFallbackVersion
	(*LiteRouteFallbackPlayers)(nil),        // 51: minekube.gate.v1.LiteRouteFallbackPlayers
	(*LiteRoute)(nil),                       // 52: minekube.gate.v1.LiteRoute
	(*UpdateLiteRouteStrategyRequest)(nil),  // 53: minekube.gate.v1.UpdateLiteRouteStrategyRequest
	(*UpdateLiteRouteStrategyResponse)(nil), // 54: minekube.gate.v1.UpdateLiteRouteStrategyResponse
	(*AddLiteRouteBackendRequest)(nil),      // 55: minekube.gate.v1.AddLiteRouteBackendRequest
	(*AddLiteRouteBackendResponse)(nil),     // 56: minekube.gate.v1.AddLiteRouteBackendResponse
	(*RemoveLiteRouteBackendRequest)(nil),   // 57: minekube.gate.v1.RemoveLiteRouteBackendRequest
	(*RemoveLiteRouteBackendResponse)(nil),  // 58: minekube.gate.v1.RemoveLiteRouteBackendResponse
	(*UpdateLiteRouteOptionsRequest)(nil),   // 59: minekube.gate.v1.UpdateLiteRouteOptionsRequest
	(*UpdateLiteRouteOptionsResponse)(nil),  // 60: minekube.gate.v1.UpdateLiteRouteOptionsResponse
	(*UpdateLiteRouteFallbackRequest)(nil),  // 61: minekube.gate.v1.UpdateLiteRouteFallbackRequest
	(*UpdateLiteRouteFallbackResponse)(nil), // 62: minekube.gate.v1.UpdateLiteRouteFallbackResponse
	nil,                                     // 63: minekube.gate.v1.JavaConfig.ServersEntry
	(*fieldmaskpb.FieldMask)(nil),           // 64: google.protobuf.FieldMask
}
var file_minekube_gate_v1_gate_service_proto_depIdxs = []int32{
	19, // 0: minekube.gate.v1.ListServersResponse.servers:type_name -> minekube.gate.v1.Server
	24, // 1: minekube.gate.v1.GetPlayerResponse.player:type_name -> minekube.gate.v1.Player
	24, // 2: minekube.gate.v1.ListPlayersResponse.players:type_name -> minekube.gate.v1.Player
	25, // 3: minekube.gate.v1.Player.bedrock:type_name -> minekube.gate.v1.BedrockPlayerData
	1,  // 4: minekube.gate.v1.BedrockPlayerData.device_os:type_name -> minekube.gate.v1.BedrockDeviceOS
	3,  // 5: minekube.gate.v1.BedrockPlayerData.ui_profile:type_name -> minekube.gate.v1.BedrockUIProfile
	2,  // 6: minekube.gate.v1.BedrockPlayerData.input_mode:type_name -> minekube.gate.v1.BedrockInputMode
	0,  // 7: minekube.gate.v1.GetStatusResponse.mode:type_name -> minekube.gate.v1.ProxyMode
	28, // 8: minekube.gate.v1.GetStatusResponse.classic:type_name -> minekube.gate.v1.ClassicStats
	29, // 9: minekube.gate.v1.GetStatusResponse.lite:type_name -> minekube.gate.v1.LiteStats
	31, // 10: minekube.gate.v1.GateConfig.api:type_name -> minekube.gate.v1.APIConfig
	32, // 11: minekube.gate.v1.GateConfig.connect:type_name -> minekube.gate.v1.ConnectConfig
	33, // 12: minekube.gate.v1.GateConfig.config:type_name -> minekube.gate.v1.JavaConfig
	34, // 13: minekube.gate.v1.JavaConfig.forwarding:type_name -> minekube.gate.v1.ForwardingConfig
	35, // 14: minekube.gate.v1.JavaConfig.status:type_name -> minekube.gate.v1.StatusConfig
	63, // 15: minekube.gate.v1.JavaConfig.servers:type_name -> minekube.gate.v1.JavaConfig.ServersEntry
	36, // 16: minekube.gate.v1.JavaConfig.lite:type_name -> minekube.gate.v1.LiteConfig
	52, // 17: minekube.gate.v1.LiteConfig.routes:type_name -> minekube.gate.v1.LiteRoute
	52, // 18: minekube.gate.v1.ListLiteRoutesResponse.routes:type_name -> minekube.gate.v1.LiteRoute
	52, // 19: minekube.gate.v1.GetLiteRouteResponse.route:type_name -> minekube.gate.v1.LiteRoute
	50, // 20: minekube.gate.v1.LiteRouteFallback.version:type_name -> minekube.gate.v1.LiteRouteFallbackVersion
	51, // 21: minekube.gate.v1.LiteRouteFallback.players:type_name -> minekube.gate.v1.LiteRouteFallbackPlayers
	47, // 22: minekube.gate.v1.LiteRoute.backends:type_name -> minekube.gate.v1.LiteRouteBackend
	4,  // 23: minekube.gate.v1.LiteRoute.strategy:type_name -> minekube.gate.v1.LiteRouteStrategy
	48, // 24: minekube.gate.v1.LiteRoute.options:type_name -> minekube.gate.v1.LiteRouteOptions
	49, // 25: minekube.gate.v1.LiteRoute.fallback:type_name -> minekube.gate.v1.LiteRouteFallback
	4,  // 26: minekube.gate.v1.UpdateLiteRouteStrategyRequest.strategy:type_name -> minekube.gate.v1.LiteRouteStrategy
	48, // 27: minekube.gate.v1.UpdateLiteRouteOptionsRequest.options:type_name -> minekube.gate.v1.LiteRouteOptions
	64, // 28: minekube.gate.v1.UpdateLiteRouteOptionsRequest.update_mask:type_name -> google.protobuf.FieldMask
	49, // 29: minekube.gate.v1.UpdateLiteRouteFallbackRequest.fallback:type_name -> minekube.gate.v1.LiteRouteFallback
	64, // 30: minekube.gate.v1.UpdateLiteRouteFallbackRequest.update_mask:type_name -> google.protobuf.FieldMask
	20, // 31: minekube.gate.v1.GateService.GetPlayer:input_type -> minekube.gate.v1.GetPlayerRequest
	22, // 32: minekube.gate.v1.GateService.ListPlayers:input_type -> minekube.gate.v1.ListPlayersRequest
	17, // 33: minekube.gate.v1.GateService.ListServers:input_type -> minekube.gate.v1.ListServersRequest
	13, // 34: minekube.gate.v1.GateService.RegisterServer:input_type -> minekube.gate.v1.RegisterServerRequest
	15, // 35: minekube.gate.v1.GateService.UnregisterServer:input_type -> minekube.gate.v1.UnregisterServerRequest
	11, // 36: minekube.gate.v1.GateService.ConnectPlayer:input_type -> minekube.gate.v1.ConnectPlayerRequest
	9,  // 37: minekube.gate.v1.GateService.DisconnectPlayer:input_type -> minekube.gate.v1.DisconnectPlayerRequest
	5,  // 38: minekube.gate.v1.GateService.StoreCookie:input_type -> minekube.gate.v1.StoreCookieRequest
	7,  // 39: minekube.gate.v1.GateService.RequestCookie:input_type -> minekube.gate.v1.RequestCookieRequest
	26, // 40: minekube.gate.v1.GateService.GetStatus:input_type -> minekube.gate.v1.GetStatusRequest
	37, // 41: minekube.gate.v1.GateService.GetConfig:input_type -> minekube.gate.v1.GetConfigRequest
	39, // 42: minekube.gate.v1.GateService.ValidateConfig:input_type -> minekube.gate.v1.ValidateConfigRequest
	41, // 43: minekube.gate.v1.GateService.ApplyConfig:input_type -> minekube.gate.v1.ApplyConfigRequest
	43, // 44: minekube.gate.v1.GateLiteService.ListLiteRoutes:input_type -> minekube.gate.v1.ListLiteRoutesRequest
	45, // 45: minekube.gate.v1.GateLiteService.GetLiteRoute:input_type -> minekube.gate.v1.GetLiteRouteRequest
	53, // 46: minekube.gate.v1.GateLiteService.UpdateLiteRouteStrategy:input_type -> minekube.gate.v1.UpdateLiteRouteStrategyRequest
	55, // 47: minekube.gate.v1.GateLiteService.AddLiteRouteBackend:input_type -> minekube.gate.v1.AddLiteRouteBackendRequest
	57, // 48: minekube.gate.v1.GateLiteService.RemoveLiteRouteBackend:input_type -> minekube.gate.v1.RemoveLiteRouteBackendRequest
	59, // 49: minekube.gate.v1.GateLiteService.UpdateLiteRouteOptions:input_type -> minekube.gate.v1.UpdateLiteRouteOptionsRequest
	61, // 50: minekube.gate.v1.GateLiteService.UpdateLiteRouteFallback:input_type -> minekube.gate.v1.UpdateLiteRouteFallbackRequest
	21, // 51: minekube.gate.v1.GateService.GetPlayer:output_type -> minekube.gate.v1.GetPlayerResponse
	23, // 52: minekube.gate.v1.GateService.ListPlayers:output_type -> minekube.gate.v1.ListPlayersResponse
	18, // 53: minekube.gate.v1.GateService.ListServers:output_type -> minekube.gate.v1.ListServersResponse
	14, // 54: minekube.gate.v1.GateService.RegisterServer:output_type -> minekube.gate.v1.RegisterServerResponse
	16, // 55: minekube.gate.v1.GateService.UnregisterServer:output_type -> minekube.gate.v1.UnregisterServerResponse
	12, // 56: minekube.gate.v1.GateService.ConnectPlayer:output_type -> minekube.gate.v1.ConnectPlayerResponse
	10, // 57: minekube.gate.v1.GateService.DisconnectPlayer:output_type -> minekube.gate.v1.DisconnectPlayerResponse
	6,  // 58: minekube.gate.v1.GateService.StoreCookie:output_type -> minekube.gate.v1.StoreCookieResponse
	8,  // 59: minekube.gate.v1.GateService.RequestCookie:output_type -> minekube.gate.v1.RequestCookieResponse
	27, // 60: minekube.gate.v1.GateService.GetStatus:output_type -> minekube.gate.v1.GetStatusResponse
	38, // 61: minekube.gate.v1.GateService.GetConfig:output_type -> minekube.gate.v1.GetConfigResponse
	40, // 62: minekube.gate.v1.GateService.ValidateConfig:output_type -> minekube.gate.v1.ValidateConfigResponse
	42, // 63: minekube.gate.v1.GateService.ApplyConfig:output_type -> minekube.gate.v1.ApplyConfigResponse
	44, // 64: minekube.gate.v1.GateLiteService.ListLiteRoutes:output_type -> minekube.gate.v1.ListLiteRoutesResponse
	46, // 65: minekube.gate.v1.GateLiteService.GetLiteRoute:output_type -> minekube.gate.v1.GetLiteRouteResponse
	54, // 66: minekube.gate.v1.GateLiteService.UpdateLiteRouteStrategy:output_type -> minekube.gate.v1.UpdateLiteRouteStrategyResponse
	56, // 67: minekube.gate.v1.GateLiteService.AddLiteRouteBackend:output_type -> minekube.gate.v1.AddLiteRouteBackendResponse
	58, // 68: minekube.gate.v1.GateLiteService.RemoveLiteRouteBackend:output_type -> minekube.gate.v1.RemoveLiteRouteBackendResponse
	60, // 69: minekube.gate.v1.GateLiteService.UpdateLiteRouteOptions:output_type -> minekube.gate.v1.UpdateLiteRouteOptionsResponse
	62, // 70: minekube.gate.v1.GateLiteService.UpdateLiteRouteFallback:output_type -> minekube.gate.v1.UpdateLiteRouteFallbackResponse
	51, // [51:71] is the sub-list for method output_type
	31, // [31:51] is the sub-list for method input_type
	31, // [31:31] is the sub-list for extension type_name
	31, // [31:31] is the sub-list for extension extendee
	0,  // [0:31] is the sub-list for field type_name
}

func init() { file_minekube_gate_v1_gate_service_proto_init() }
func file_minekube_gate_v1_gate_service_proto_init() {
	if File_minekube_gate_v1_gate_service_proto != nil {
		return
	}
	file_minekube_gate_v1_gate_service_proto_msgTypes[22].OneofWrappers = []any{
		(*GetStatusResponse_Classic)(nil),
		(*GetStatusResponse_Lite)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_minekube_gate_v1_gate_service_proto_rawDesc), len(file_minekube_gate_v1_gate_service_proto_rawDesc)),
			NumEnums:      5,
			NumMessages:   59,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_minekube_gate_v1_gate_service_proto_goTypes,
		DependencyIndexes: file_minekube_gate_v1_gate_service_proto_depIdxs,
		EnumInfos:         file_minekube_gate_v1_gate_service_proto_enumTypes,
		MessageInfos:      file_minekube_gate_v1_gate_service_proto_msgTypes,
	}.Build()
	File_minekube_gate_v1_gate_service_proto = out.File
	file_minekube_gate_v1_gate_service_proto_goTypes = nil
	file_minekube_gate_v1_gate_service_proto_depIdxs = nil
}
