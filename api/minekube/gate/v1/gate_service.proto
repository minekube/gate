syntax = "proto3";

package minekube.gate.v1;

// GateService is the service of a Gate instance.
service GateService {
  // GetPlayer returns the player by the given id or username.
  // If the player is not online, the rpc fails with a NOT_FOUND error code.
  rpc GetPlayer(GetPlayerRequest) returns (GetPlayerResponse);
  // ListServers returns all registered servers.
  rpc ListServers(ListServersRequest) returns (ListServersResponse);
  // UpdateServers allows multiple servers to be added or removed in a single request.
  rpc UpdateServers(UpdateServersRequest) returns (UpdateServersResponse);
}

enum Operation {
  OPERATION_UNSPECIFIED = 0;
  OPERATION_CREATE = 1;  // Add server
  OPERATION_DELETE = 2;  // Remove server
}

message UpdateServersRequest {
  repeated ServerOperation operations = 1; // List of operations to add or remove servers
}

message ServerOperation {
  Operation operation = 1;  // The operation (create or delete)
  string name = 2;          // The name of the server
  string address = 3;       // The address of the server
}

message UpdateServersResponse {
  repeated ServerResponse responses = 1;  // List of responses, one for each operation
}

message ServerResponse {
  string name = 1;
  string address = 2;
  bool success = 3;           // Whether the operation was successful
  string error_message = 4;   // Error message, if any
}

// ListServersRequest is the request for ListServers method.
message ListServersRequest {
}
// ListServersResponse is the response for ListServers method.
message ListServersResponse {
  repeated Server servers = 1;
}

// Server is a backend server where Gate can connect players to.
message Server {
  string name = 1;
  string address = 2;
  int32 players = 3;
}

// GetPlayerRequest is the request for GetPlayer method.
message GetPlayerRequest {
  // Gets the player by the given id (Minecraft UUID).
  // Optional, if not set the username will be used.
  // If both id and username are set, the id will be used.
  //
  // Format but be a valid Minecraft UUID.
  string id = 1;
  // Gets the player by the given username.
  // Optional, if not set the id will be used.
  string username = 2;
}

// GetPlayerResponse is the response for GetPlayer method.
message GetPlayerResponse {
  // The player matching the request.
  Player player = 1;
}

// Player is a Gate player.
message Player {
  string id = 1;
  string username = 2;
}
